#! /bin/sh
# Generated from DMRTest.at by GNU Autoconf 2.69.
#
# Copyright (C) 2009-2012 Free Software Foundation, Inc.
#
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
$as_echo "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=
# Running several jobs in parallel, 0 means as many as test groups.
at_jobs=1
at_traceon=:
at_trace_echo=:
at_check_filter_trace=:

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether to rerun failed tests.
at_recheck=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# Whether to enable colored test results.
at_color=no
# List of the tested programs.
at_tested=''
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='???'
# Description of all the test groups.
at_help_all="1;DMRTest.at:262;parse dmr-testsuite/test_simple_1.xml;parse;
2;DMRTest.at:263;parse dmr-testsuite/test_simple_2.xml;parse;
3;DMRTest.at:264;parse dmr-testsuite/test_simple_3.xml;parse;
4;DMRTest.at:266;parse dmr-testsuite/test_simple_3_error_1.xml;parse;
5;DMRTest.at:267;parse dmr-testsuite/test_simple_3_error_2.xml;parse;
6;DMRTest.at:268;parse dmr-testsuite/test_simple_3_error_3.xml;parse;
7;DMRTest.at:270;parse dmr-testsuite/test_simple_4.xml;parse;
8;DMRTest.at:271;parse dmr-testsuite/test_simple_5.xml;parse;
9;DMRTest.at:272;parse dmr-testsuite/test_simple_6.xml;parse;
10;DMRTest.at:273;parse dmr-testsuite/test_simple_7.xml;parse;
11;DMRTest.at:274;parse dmr-testsuite/test_simple_8.xml;parse;
12;DMRTest.at:275;parse dmr-testsuite/test_simple_9.xml;parse;
13;DMRTest.at:276;parse dmr-testsuite/test_simple_9.1.xml;parse;
14;DMRTest.at:277;parse dmr-testsuite/test_simple_10.xml;parse;
15;DMRTest.at:279;parse dmr-testsuite/test_array_1.xml;parse;
16;DMRTest.at:280;parse dmr-testsuite/test_array_2.xml;parse;
17;DMRTest.at:281;parse dmr-testsuite/test_array_3.xml;parse;
18;DMRTest.at:282;parse dmr-testsuite/test_array_4.xml;parse;
19;DMRTest.at:283;parse dmr-testsuite/test_array_5.xml;parse;
20;DMRTest.at:284;parse dmr-testsuite/test_array_6.xml;parse;
21;DMRTest.at:285;parse dmr-testsuite/test_array_7.xml;parse;
22;DMRTest.at:286;parse dmr-testsuite/test_array_8.xml;parse;
23;DMRTest.at:287;parse dmr-testsuite/test_array_10.xml;parse;
24;DMRTest.at:288;parse dmr-testsuite/test_array_11.xml;parse;
25;DMRTest.at:290;parse dmr-testsuite/ignore_foreign_xml_1.xml;parse;
26;DMRTest.at:291;parse dmr-testsuite/ignore_foreign_xml_2.xml;parse;
27;DMRTest.at:292;parse dmr-testsuite/ignore_foreign_xml_3.xml;parse;
28;DMRTest.at:302;trans test_simple_1.xml;trans;
29;DMRTest.at:303;trans test_simple_2.xml;trans;
30;DMRTest.at:304;trans test_simple_3.xml;trans;
31;DMRTest.at:305;trans test_simple_4.xml;trans;
32;DMRTest.at:306;trans test_simple_5.xml;trans;
33;DMRTest.at:307;trans test_simple_6.xml;trans;
34;DMRTest.at:308;trans test_simple_7.xml;trans;
35;DMRTest.at:309;trans test_simple_8.xml;trans;
36;DMRTest.at:310;trans test_simple_9.xml;trans;
37;DMRTest.at:311;trans test_simple_9.1.xml;trans;
38;DMRTest.at:312;trans test_simple_10.xml;trans;
39;DMRTest.at:314;trans test_array_1.xml;trans;
40;DMRTest.at:315;trans test_array_2.xml;trans;
41;DMRTest.at:316;trans test_array_3.xml;trans;
42;DMRTest.at:317;trans test_array_4.xml;trans;
43;DMRTest.at:318;trans test_array_5.xml;trans;
44;DMRTest.at:319;trans test_array_6.xml;trans;
45;DMRTest.at:320;trans test_array_7.xml;trans;
46;DMRTest.at:321;trans test_array_8.xml;trans;
47;DMRTest.at:322;trans test_array_10.xml;trans;
48;DMRTest.at:323;trans test_array_11.xml;trans;
49;DMRTest.at:325;intern test_simple_1.xml;intern;
50;DMRTest.at:326;intern test_simple_2.xml;intern;
51;DMRTest.at:327;intern test_simple_3.xml;intern;
52;DMRTest.at:328;intern test_simple_4.xml;intern;
53;DMRTest.at:329;intern test_simple_5.xml;intern;
54;DMRTest.at:330;intern test_simple_6.xml;intern;
55;DMRTest.at:331;intern test_simple_7.xml;intern;
56;DMRTest.at:332;intern test_simple_8.xml;intern;
57;DMRTest.at:333;intern test_simple_9.xml;intern;
58;DMRTest.at:334;intern test_simple_9.1.xml;intern;
59;DMRTest.at:335;intern test_simple_10.xml;intern;
60;DMRTest.at:337;intern test_array_1.xml;intern;
61;DMRTest.at:338;intern test_array_2.xml;intern;
62;DMRTest.at:339;intern test_array_3.xml;intern;
63;DMRTest.at:340;intern test_array_4.xml;intern;
64;DMRTest.at:341;intern test_array_5.xml;intern;
65;DMRTest.at:342;intern test_array_6.xml;intern;
66;DMRTest.at:343;intern test_array_7.xml;intern;
67;DMRTest.at:344;intern test_array_8.xml;intern;
68;DMRTest.at:345;intern test_array_10.xml;intern;
69;DMRTest.at:346;intern test_array_11.xml;intern;
70;DMRTest.at:349;parse dmr-testsuite/test_array_9.xml;parse;
71;DMRTest.at:350;parse dmr-testsuite/test_array_12.xml;parse;
72;DMRTest.at:351;parse dmr-testsuite/test_array_13.xml;parse;
73;DMRTest.at:352;parse dmr-testsuite/test_array_14.xml;parse;
74;DMRTest.at:355;parse dmr-testsuite/test_simple_6.2.xml;parse;
75;DMRTest.at:356;parse dmr-testsuite/test_simple_6.3.xml;parse;
76;DMRTest.at:358;trans test_array_9.xml;trans;
77;DMRTest.at:359;trans test_array_12.xml;trans;
78;DMRTest.at:360;trans test_array_13.xml;trans;
79;DMRTest.at:361;trans test_array_14.xml;trans;
80;DMRTest.at:363;trans test_simple_6.2.xml;trans;
81;DMRTest.at:364;trans test_simple_6.3.xml;trans;
82;DMRTest.at:367;trans test_array_9.xml;trans;
83;DMRTest.at:368;trans test_array_12.xml;trans;
84;DMRTest.at:369;trans test_array_13.xml;trans;
85;DMRTest.at:370;trans test_array_14.xml;trans;
86;DMRTest.at:372;trans test_simple_6.2.xml;trans;
87;DMRTest.at:373;trans test_simple_6.3.xml;trans;
88;DMRTest.at:375;intern test_array_9.xml;intern;
89;DMRTest.at:376;intern test_array_12.xml;intern;
90;DMRTest.at:377;intern test_array_13.xml;intern;
91;DMRTest.at:378;intern test_array_14.xml;intern;
92;DMRTest.at:380;intern test_simple_6.2.xml;intern;
93;DMRTest.at:381;intern test_simple_6.3.xml;intern;
94;DMRTest.at:397;trans ce test_array_3.1.dmr row;x test_array_3.1.dmr.1.trans_base;trans_ce;
95;DMRTest.at:397;trans ce test_array_3.1.dmr row=[2:3];x test_array_3.1.dmr.2.trans_base;trans_ce;
96;DMRTest.at:397;trans ce test_array_3.1.dmr row=[2:3];x[0:1] test_array_3.1.dmr.3.trans_base;trans_ce;
97;DMRTest.at:397;trans ce test_array_3.1.dmr x[0:1] test_array_3.1.dmr.4.trans_base;trans_ce;
98;DMRTest.at:397;trans ce test_array_3.1.dmr x test_array_3.1.dmr.5.trans_base;trans_ce;
99;DMRTest.at:401;trans ce test_array_4.xml a test_array_4.xml.1.trans_base;trans_ce;
100;DMRTest.at:402;trans ce test_array_4.xml a[][]  test_array_4.xml.1.trans_base;trans_ce;
101;DMRTest.at:404;trans ce test_array_4.xml /row=[0:1];/col=[3];a test_array_4.xml.3.trans_base;trans_ce;
102;DMRTest.at:406;trans ce test_array_4.xml /row=[0:1];/col=[3];a[][]  test_array_4.xml.4.trans_base;trans_ce;
103;DMRTest.at:408;trans ce test_array_4.xml /row=[0:1];/col=[3];a[][];b[0][];c[0:][0:]  test_array_4.xml.5.trans_base;trans_ce;
104;DMRTest.at:410;trans ce test_array_4.xml x[][]  /test_array_4.xml.6.trans_base;trans_ce;
105;DMRTest.at:411;trans ce test_array_4.xml /row=[0:1];x[][]  test_array_4.xml.7.trans_base;trans_ce;
106;DMRTest.at:413;trans ce test_array_4.xml c[2:][2:]  test_array_4.xml.8.trans_base;trans_ce;
107;DMRTest.at:415;trans ce test_simple_6.xml s test_simple_6.xml.1.trans_base;trans_ce;
108;DMRTest.at:416;trans ce test_simple_6.xml s.i1 test_simple_6.xml.2.trans_base;trans_ce;
109;DMRTest.at:417;trans ce test_simple_6.xml s.s test_simple_6.xml.3.trans_base;trans_ce;
110;DMRTest.at:418;trans ce test_simple_6.1.xml s.inner.i2 test_simple_6.1.xml.1.trans_base;trans_ce;
111;DMRTest.at:420;trans ce test_simple_6.xml s{i1} test_simple_6.xml.2.trans_base;trans_ce;
112;DMRTest.at:421;trans ce test_simple_6.xml s{s} test_simple_6.xml.3.trans_base;trans_ce;
113;DMRTest.at:422;trans ce test_simple_6.1.xml s{inner.i2} test_simple_6.1.xml.1.trans_base;trans_ce;
114;DMRTest.at:423;trans ce test_simple_6.1.xml s{inner{i2}} test_simple_6.1.xml.1.trans_base;trans_ce;
115;DMRTest.at:426;trans ce test_array_6.xml a test_array_6.xml.1.trans_base;trans_ce;
116;DMRTest.at:427;trans ce test_array_6.xml a[][]  test_array_6.xml.1.trans_base;trans_ce;
117;DMRTest.at:428;trans ce test_array_6.xml /row=[0:1];a[][]  test_array_6.xml.2.trans_base;trans_ce;
118;DMRTest.at:429;trans ce test_array_6.xml /row=[0:1];a[][1:2]  test_array_6.xml.3.trans_base;trans_ce;
119;DMRTest.at:432;trans ce test_array_6.2.xml a test_array_6.2.xml.1.trans_base;trans_ce;
120;DMRTest.at:433;trans ce test_array_6.2.xml a{i;j} test_array_6.2.xml.1.trans_base;trans_ce;
121;DMRTest.at:434;trans ce test_array_6.2.xml a.i test_array_6.2.xml.2.trans_base;trans_ce;
122;DMRTest.at:435;trans ce test_array_6.2.xml a{i} test_array_6.2.xml.2.trans_base;trans_ce;
123;DMRTest.at:436;trans ce test_array_6.2.xml a.i[0][1:2]  test_array_6.2.xml.3.trans_base;trans_ce;
124;DMRTest.at:437;trans ce test_array_6.2.xml a{i[0][1:2]}  test_array_6.2.xml.3.trans_base;trans_ce;
125;DMRTest.at:438;trans ce test_array_6.2.xml /row=[0:1];a.i[][1:2]  test_array_6.2.xml.4.trans_base;trans_ce;
126;DMRTest.at:439;trans ce test_array_6.2.xml /row=[0:1];a{i[][1:2]}  test_array_6.2.xml.4.trans_base;trans_ce;
127;DMRTest.at:441;trans ce test_array_6.2.xml a.j test_array_6.2.xml.5.trans_base;trans_ce;
128;DMRTest.at:444;trans ce test_array_6.1.xml a test_array_6.1.xml.1.trans_base;trans_ce;
129;DMRTest.at:447;trans ce test_array_6.1.xml /row=[1:2];a[][0]  test_array_6.1.xml.2.trans_base;trans_ce;
130;DMRTest.at:448;trans ce test_array_6.1.xml /row=[1:2];a[][0]{i;j}  test_array_6.1.xml.2.trans_base;trans_ce;
131;DMRTest.at:450;trans ce test_array_6.1.xml row=[1:2];a[][0]{i;j}  test_array_6.1.xml.2.trans_base;trans_ce;
132;DMRTest.at:453;trans ce test_array_6.1.xml a{i[1:2][1:3];j}  test_array_6.1.xml.3.trans_base;trans_ce;
133;DMRTest.at:454;trans ce test_array_6.1.xml a[][]{i[1:2][1:3];j}  test_array_6.1.xml.3.trans_base;trans_ce;
134;DMRTest.at:458;trans ce test_array_6.1.xml /row=[1];a[][0]{i[][0:1]}  test_array_6.1.xml.4.trans_base;trans_ce;
135;DMRTest.at:461;trans ce test_simple_7.xml s test_simple_7.xml.1.trans_base;trans_ce;
136;DMRTest.at:462;trans ce test_simple_7.xml s{i1;s} test_simple_7.xml.1.trans_base;trans_ce;
137;DMRTest.at:464;trans ce test_simple_7.xml s.i1 test_simple_7.xml.2.trans_base;trans_ce;
138;DMRTest.at:465;trans ce test_simple_7.xml s{i1} test_simple_7.xml.2.trans_base;trans_ce;
139;DMRTest.at:467;trans ce test_simple_8.xml outer test_simple_8.xml.1.trans_base;trans_ce;
140;DMRTest.at:468;trans ce test_simple_8.xml outer.s.s test_simple_8.xml.2.trans_base;trans_ce;
141;DMRTest.at:469;trans ce test_simple_8.xml outer{s{s}} test_simple_8.xml.2.trans_base;trans_ce;
142;DMRTest.at:471;trans ce test_array_7.xml s test_array_7.xml.1.trans_base;trans_ce;
143;DMRTest.at:472;trans ce test_array_7.xml s{i1;s} test_array_7.xml.1.trans_base;trans_ce;
144;DMRTest.at:474;trans ce test_array_7.xml s.i1 test_array_7.xml.2.trans_base;trans_ce;
145;DMRTest.at:475;trans ce test_array_7.xml s{i1} test_array_7.xml.2.trans_base;trans_ce;
146;DMRTest.at:477;trans ce test_array_7.xml s[1]  test_array_7.xml.3.trans_base;trans_ce;
147;DMRTest.at:478;trans ce test_array_7.xml s[1]{i1;s} test_array_7.xml.3.trans_base;trans_ce;
148;DMRTest.at:480;trans ce test_array_7.xml s[1]{i1} test_array_7.xml.4.trans_base;trans_ce;
149;DMRTest.at:483;trans ce test_array_8.xml /col=[1:2];s[1][]{i1} test_array_8.xml.1.trans_base;trans_ce;
150;DMRTest.at:484;trans ce test_array_8.xml col=[1:2];s[1][]{i1} test_array_8.xml.1.trans_base;trans_ce;
151;DMRTest.at:487;trans ce test_array_7.1.xml  test_array_7.1.xml.1.trans_base;trans_ce;
152;DMRTest.at:488;trans ce test_array_7.1.xml s test_array_7.1.xml.1.trans_base;trans_ce;
153;DMRTest.at:490;trans ce test_array_7.1.xml s.i1 test_array_7.1.xml.2.trans_base;trans_ce;
154;DMRTest.at:491;trans ce test_array_7.1.xml s.i1[][]  test_array_7.1.xml.2.trans_base;trans_ce;
155;DMRTest.at:492;trans ce test_array_7.1.xml s{i1} test_array_7.1.xml.2.trans_base;trans_ce;
156;DMRTest.at:493;trans ce test_array_7.1.xml s{i1[][]}  test_array_7.1.xml.2.trans_base;trans_ce;
157;DMRTest.at:495;trans ce test_array_7.1.xml s.i1[0][0]  test_array_7.1.xml.3.trans_base;trans_ce;
158;DMRTest.at:496;trans ce test_array_7.1.xml s{i1[0][0]}  test_array_7.1.xml.3.trans_base;trans_ce;
159;DMRTest.at:498;trans ce test_array_7.1.xml s.i1[0:2][1:2]  test_array_7.1.xml.4.trans_base;trans_ce;
160;DMRTest.at:502;trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s  test_array_7.1.xml.5.trans_base;trans_ce;
161;DMRTest.at:504;trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s.i1  test_array_7.1.xml.6.trans_base;trans_ce;
162;DMRTest.at:505;trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s.i1[][]  test_array_7.1.xml.6.trans_base;trans_ce;
163;DMRTest.at:506;trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s{i1}  test_array_7.1.xml.6.trans_base;trans_ce;
164;DMRTest.at:507;trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s{i1[][]}  test_array_7.1.xml.6.trans_base;trans_ce;
165;DMRTest.at:510;trans ce test_array_7.2.xml /col=[1:2];s[]{i1} test_array_7.2.xml.1.trans_base;trans_ce;
166;DMRTest.at:511;trans ce test_array_7.2.xml /col=[1:2];s[]{i1[][]} test_array_7.2.xml.1.trans_base;trans_ce;
167;DMRTest.at:512;trans ce test_array_7.2.xml /col=[1:2];s{i1[][]} test_array_7.2.xml.1.trans_base;trans_ce;
168;DMRTest.at:514;trans ce test_array_7.2.xml /col=[1:2];s[]{i1[0][]} test_array_7.2.xml.2.trans_base;trans_ce;
169;DMRTest.at:515;trans ce test_array_7.2.xml /col=[1:2];s{i1[0][]} test_array_7.2.xml.2.trans_base;trans_ce;
170;DMRTest.at:517;trans ce test_array_7.2.xml /col=[1:2];s[0]{i1} test_array_7.2.xml.3.trans_base;trans_ce;
171;DMRTest.at:518;trans ce test_array_7.2.xml /col=[1:2];s[0]{i1[][]} test_array_7.2.xml.3.trans_base;trans_ce;
172;DMRTest.at:520;trans ce test_array_7.2.xml /col=[1:2];s[0]{i1[0][]} test_array_7.2.xml.4.trans_base;trans_ce;
173;DMRTest.at:524;trans test_array_1.xml scale(x,1)  test_array_1.xml.1.func_base;trans_func_ce;
174;DMRTest.at:525;trans test_array_1.xml scale(x,10)  test_array_1.xml.2.func_base;trans_func_ce;
175;DMRTest.at:526;trans test_array_1.xml scale(x,-10)  test_array_1.xml.3.func_base;trans_func_ce;
176;DMRTest.at:527;trans test_array_1.xml scale(x,0.001)  test_array_1.xml.4.func_base;trans_func_ce;
177;DMRTest.at:528;trans test_array_1.xml scale(x,-0.001)  test_array_1.xml.5.func_base;trans_func_ce;
178;DMRTest.at:532;trans test_array_1.xml scale(x,0x7fffffffffffffff)  test_array_1.xml.6.func_base;trans_func_ce;
179;DMRTest.at:534;trans test_array_1.xml scale(x,0x8fffffffffffffff)  test_array_1.xml.7.func_base;trans_func_ce;
180;DMRTest.at:538;trans test_array_5.xml scale(a,0.001)  test_array_5.xml.1.func_base;trans_func_ce;
181;DMRTest.at:539;trans test_array_5.xml scale(b,0.001)  test_array_5.xml.2.func_base;trans_func_ce;
182;DMRTest.at:541;trans test_array_5.xml scale(c,0.001)  test_array_5.xml.3.func_base;trans_func_ce;
183;DMRTest.at:542;trans test_array_5.xml scale(d,0.001)  test_array_5.xml.4.func_base;trans_func_ce;
184;DMRTest.at:547;trans vol_1_ce_1.xml scale(u,10)  vol_1_ce_1.xml.1.func_base;trans_func_ce;
185;DMRTest.at:548;trans vol_1_ce_1.xml scale(u,v)  vol_1_ce_1.xml.2.func_base;trans_func_ce;
186;DMRTest.at:549;trans vol_1_ce_1.xml scale(scale(u,10),0.01)  vol_1_ce_1.xml.3.func_base;trans_func_ce;
187;DMRTest.at:552;trans vol_1_ce_1.xml scale(Point.x,10)  vol_1_ce_1.xml.4.func_base;trans_func_ce;
188;DMRTest.at:553;trans vol_1_ce_1.xml scale(Point.x,Point.y)  vol_1_ce_1.xml.5.func_base;trans_func_ce;
189;DMRTest.at:554;trans vol_1_ce_1.xml scale(scale(Point.x,10),0.01)  vol_1_ce_1.xml.6.func_base;trans_func_ce;
190;DMRTest.at:557;trans vol_1_ce_1.xml scale(\\\$Byte(20:1,2,3,4),10)  vol_1_ce_1.xml.7.func_base;trans_func_ce;
191;DMRTest.at:558;trans vol_1_ce_1.xml scale(\\\$Int8(20:10,11,12,-9),10)  vol_1_ce_1.xml.8.func_base;trans_func_ce;
192;DMRTest.at:559;trans vol_1_ce_1.xml scale(\\\$UInt16(20:1,2,3,4),10)  vol_1_ce_1.xml.9.func_base;trans_func_ce;
193;DMRTest.at:560;trans vol_1_ce_1.xml scale(\\\$Int16(20:1,2,3,-4),10)  vol_1_ce_1.xml.10.func_base;trans_func_ce;
194;DMRTest.at:561;trans vol_1_ce_1.xml scale(\\\$UInt32(20:1,2,3,4),10)  vol_1_ce_1.xml.11.func_base;trans_func_ce;
195;DMRTest.at:562;trans vol_1_ce_1.xml scale(\\\$Int32(20:1,2,3,-4),10)  vol_1_ce_1.xml.12.func_base;trans_func_ce;
196;DMRTest.at:563;trans vol_1_ce_1.xml scale(\\\$UInt64(20:1,2,3,0xffffffffffffffff),1)  vol_1_ce_1.xml.13.func_base;trans_func_ce;
197;DMRTest.at:564;trans vol_1_ce_1.xml scale(\\\$Int64(20:1,2,3,0x7fffffffffffffff),1)  vol_1_ce_1.xml.14.func_base;trans_func_ce;
198;DMRTest.at:565;trans vol_1_ce_1.xml scale(\\\$Float32(20:1,2,3,4.55),10)  vol_1_ce_1.xml.15.func_base;trans_func_ce;
199;DMRTest.at:566;trans vol_1_ce_1.xml scale(\\\$Float64(20:1,2,3,4.55),10)  vol_1_ce_1.xml.16.func_base;trans_func_ce;
200;DMRTest.at:570;trans vol_1_ce_10.xml scale(lat,10)  vol_1_ce_10.xml.1.func_base;trans_func_ce;
201;DMRTest.at:571;trans vol_1_ce_10.xml scale(lat,10);scale(lon,10)  vol_1_ce_10.xml.2.func_base;trans_func_ce;
202;DMRTest.at:572;trans vol_1_ce_10.xml scale(lat,10);scale(lon,10) lat[10:11][10:11];lon[10:11][10:11] vol_1_ce_10.xml.3.func_base;trans_func_ce;
203;DMRTest.at:579;filter test_simple_7.xml s test_simple_7.xml.f.trans_base;filter;
204;DMRTest.at:581;filter test_simple_7.xml s|i1==1024 test_simple_7.xml.f1.trans_base;filter;
205;DMRTest.at:582;filter test_simple_7.xml s|i1!=1024 test_simple_7.xml.f2.trans_base;filter;
206;DMRTest.at:583;filter test_simple_7.xml s|i1<=1024 test_simple_7.xml.f3.trans_base;filter;
207;DMRTest.at:584;filter test_simple_7.xml s|i1<1024 test_simple_7.xml.f4.trans_base;filter;
208;DMRTest.at:585;filter test_simple_7.xml s|i1<=1024 test_simple_7.xml.f5.trans_base;filter;
209;DMRTest.at:586;filter test_simple_7.xml s|i1>1024 test_simple_7.xml.f6.trans_base;filter;
210;DMRTest.at:587;filter test_simple_7.xml s|i1>=1024 test_simple_7.xml.f7.trans_base;filter;
211;DMRTest.at:589;filter test_simple_7.xml s|1024<i1 test_simple_7.xml.f8.trans_base;filter;
212;DMRTest.at:590;filter test_simple_7.xml s|1024<=i1<=32768 test_simple_7.xml.f9.trans_base;filter;
213;DMRTest.at:591;filter test_simple_7.xml s|i1>=1024.0 test_simple_7.xml.fa.trans_base;filter;
214;DMRTest.at:593;filter test_simple_7.xml s|s==\\\"Silly test string: 2\\\" test_simple_7.xml.fs1.trans_base;filter;
215;DMRTest.at:594;filter test_simple_7.xml s|s!=\\\"Silly test string: 2\\\" test_simple_7.xml.fs2.trans_base;filter;
216;DMRTest.at:595;filter test_simple_7.xml s|s<\\\"Silly test string: 2\\\" test_simple_7.xml.fs3.trans_base;filter;
217;DMRTest.at:596;filter test_simple_7.xml s|s<=\\\"Silly test string: 2\\\" test_simple_7.xml.fs4.trans_base;filter;
218;DMRTest.at:597;filter test_simple_7.xml s|s>\\\"Silly test string: 2\\\" test_simple_7.xml.fs5.trans_base;filter;
219;DMRTest.at:598;filter test_simple_7.xml s|s>=\\\"Silly test string: 2\\\" test_simple_7.xml.fs6.trans_base;filter;
220;DMRTest.at:599;filter test_simple_7.xml s|s~=\\\".*2\\\" test_simple_7.xml.fs7.trans_base;filter;
221;DMRTest.at:603;filter test_simple_7.xml s{i1}|i1<32768 test_simple_7.xml.g1.trans_base;filter;
222;DMRTest.at:604;filter test_simple_7.xml s{i1}|s<=\\\"Silly test string: 2\\\" test_simple_7.xml.g1.trans_base;filter;
223;DMRTest.at:607;filter test_simple_8.1.xml outer test_simple_8.1.xml.f1.trans_base;filter;
224;DMRTest.at:608;filter test_simple_8.1.xml outer{x;y} test_simple_8.1.xml.f2.trans_base;filter;
225;DMRTest.at:609;filter test_simple_8.1.xml outer{x;y;inner} test_simple_8.1.xml.f3.trans_base;filter;
226;DMRTest.at:610;filter test_simple_8.1.xml outer{x;y;inner|i1<1000} test_simple_8.1.xml.f4.trans_base;filter;
227;DMRTest.at:611;filter test_simple_8.1.xml outer{x;y;inner|i1<1000}|x<0.0 test_simple_8.1.xml.f5.trans_base;filter;
228;DMRTest.at:618;filter names_with_spaces.dmr /u names_with_spaces.dmr.1.trans_base;filter;
229;DMRTest.at:619;filter names_with_spaces.dmr /inst2/u names_with_spaces.dmr.2.trans_base;filter;
230;DMRTest.at:620;filter names_with_spaces.dmr /inst2/Point.x names_with_spaces.dmr.3.trans_base;filter;
231;DMRTest.at:622;filter names_with_spaces2.dmr /inst2/\\\"Point Break\\\".x names_with_spaces2.dmr.1.trans_base;filter;
232;DMRTest.at:623;filter names_with_spaces2.dmr /inst2/Point%20Break.x names_with_spaces2.dmr.1.trans_base;filter;
233;DMRTest.at:624;filter names_with_spaces2.dmr /inst2/\\\"Point%20Break\\\".x names_with_spaces2.dmr.1.trans_base;filter;
234;DMRTest.at:626;filter names_with_spaces3.dmr /inst2/\\\"New Group\\\"/x names_with_spaces3.dmr.1.trans_base;filter;
235;DMRTest.at:627;filter names_with_spaces3.dmr /inst2/New%20Group/x names_with_spaces3.dmr.1.trans_base;filter;
236;DMRTest.at:631;parse ce test_simple_1.xml nasty;parse_ce;
237;DMRTest.at:635;parse ce test_simple_1.xml d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1;parse_ce;
238;DMRTest.at:637;parse ce test_simple_6.3.xml s.nasty;parse_ce;
239;DMRTest.at:639;parse ce test_simple_6.3.xml s.d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1;parse_ce;
240;DMRTest.at:641;parse ce vol_1_ce_12.xml temp[nasty];parse_ce;
241;DMRTest.at:643;parse ce vol_1_ce_12.xml temp[d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1];parse_ce;
"
# List of the all the test groups.
at_groups_all=`$as_echo "$at_help_all" | sed 's/;.*//'`

# at_fn_validate_ranges NAME...
# -----------------------------
# Validate and normalize the test group number contained in each variable
# NAME. Leading zeroes are treated as decimal.
at_fn_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 241; then
      $as_echo "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # AS_VAR_ARITH treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}

##
## Set up package specific options.
##

at_arg_given_baselines=false


at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=?*) at_optarg=`expr "X$at_option" : '[^=]*=\(.*\)'` ;;
  *)    at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --color )
	at_color=always
	;;
    --color=* )
	case $at_optarg in
	no | never | none) at_color=never ;;
	auto | tty | if-tty) at_color=auto ;;
	always | yes | force) at_color=always ;;
	*) at_optname=`echo " $at_option" | sed 's/^ //; s/=.*//'`
	   as_fn_error $? "unrecognized argument to $at_optname: $at_optarg" ;;
	esac
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'
	at_trace_echo=echo
	at_check_filter_trace=at_fn_filter_trace
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_fn_validate_ranges at_option
	as_fn_append at_groups "$at_option$as_nl"
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_start
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,$p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '1,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_fn_validate_ranges at_range_start at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	if test x- = "x$at_dir" ; then
	  at_dir=./-
	fi
	;;

    # Parallel execution.
    --jobs | -j )
	at_jobs=0
	;;
    --jobs=* | -j[0-9]* )
	if test -n "$at_optarg"; then
	  at_jobs=$at_optarg
	else
	  at_jobs=`expr X$at_option : 'X-j\(.*\)'`
	fi
	case $at_jobs in *[!0-9]*)
	  at_optname=`echo " $at_option" | sed 's/^ //; s/[0-9=].*//'`
	  as_fn_error $? "non-numeric argument to $at_optname: $at_jobs" ;;
	esac
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`$as_echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the keywords.
	at_groups_selected=`$as_echo "$at_groups_selected" | sed 's/;.*//'`
	as_fn_append at_groups "$at_groups_selected$as_nl"
	;;
    --recheck)
	at_recheck=:
	;;
    --baselines )
	at_prev=--baselines
	;;
    --baselines=* )
	at_arg_baselines=$at_optarg
	at_arg_given_baselines=:
	echo "baselines set to $at_arg_baselines";
     baselines=$at_arg_baselines
	;;


    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    as_fn_error $? "invalid variable name: \`$at_envvar'" ;;
	esac
	at_value=`$as_echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	as_fn_append at_debug_args " $at_envvar='$at_value'"
	;;

     *) $as_echo "$as_me: invalid option: $at_option" >&2
	$as_echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"; then :
  as_fn_error $? "\`$at_prev' requires an argument"
fi

# The file containing the suite.
at_suite_log=$at_dir/$as_me.log

# Selected test groups.
if test -z "$at_groups$at_recheck"; then
  at_groups=$at_groups_all
else
  if test -n "$at_recheck" && test -r "$at_suite_log"; then
    at_oldfails=`sed -n '
      /^Failed tests:$/,/^Skipped tests:$/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^Unexpected passes:$/,/^## Detailed failed tests/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^## Detailed failed tests/q
      ' "$at_suite_log"`
    as_fn_append at_groups "$at_oldfails$as_nl"
  fi
  # Sort the tests, removing duplicates.
  at_groups=`$as_echo "$at_groups" | sort -nu | sed '/^$/d'`
fi

if test x"$at_color" = xalways \
   || { test x"$at_color" = xauto && test -t 1; }; then
  at_red=`printf '\033[0;31m'`
  at_grn=`printf '\033[0;32m'`
  at_lgn=`printf '\033[1;32m'`
  at_blu=`printf '\033[1;34m'`
  at_std=`printf '\033[m'`
else
  at_red= at_grn= at_lgn= at_blu= at_std=
fi

##
## Process package specific options when _not_ supplied.
##

if $at_arg_given_baselines; then :

else
  baselines=
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

Do not change environment variables directly.  Instead, set them via
command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relative to the top level of this distribution.
E.g., from within the build directory /tmp/foo-1.0, invoking this:

  $ $0 AUTOTEST_PATH=bin

is equivalent to the following, assuming the source directory is /src/foo-1.0:

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH $0
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
      --color[=never|auto|always]
                 enable colored test results on terminal, or always
  -j, --jobs[=N]
                 Allow N jobs at once; infinite jobs with no arg (default 1)
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
      --recheck  select all tests that failed or passed unexpectedly last time
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Other options:
_ATEOF

cat <<_ATEOF || at_write_fail=1
--baselines=yes|no   Build the baseline file for parser test 'arg'
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <opendap-tech@opendap.org>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
libdap 3.20.8 test suite: dmr-test test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Pass an empty line as separator between selected groups and help.
  $as_echo "$at_groups$as_nl$as_nl$at_help_all" |
    awk 'NF == 1 && FS != ";" {
	   selected[$ 1] = 1
	   next
	 }
	 /^$/ { FS = ";" }
	 NF > 0 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) {
	       lmax = 79
	       indent = "     "
	       line = indent
	       len = length (line)
	       n = split ($ 4, a, " ")
	       for (i = 1; i <= n; i++) {
		 l = length (a[i]) + 1
		 if (i > 1 && len + l > lmax) {
		   print line
		   line = indent " " a[i]
		   len = length (line)
		 } else {
		   line = line " " a[i]
		   len += l
		 }
	       }
	       if (n)
		 print line
	     }
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  $as_echo "$as_me (libdap 3.20.8)" &&
  cat <<\_ATEOF || at_write_fail=1

Copyright (C) 2012 Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.
_ATEOF
  exit $at_write_fail
fi

# Should we print banners?  Yes if more than one test is run.
case $at_groups in #(
  *$as_nl* )
      at_print_banners=: ;; #(
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to a single space once printed.

# Take any -C into account.
if $at_change_dir ; then
  test x != "x$at_dir" && cd "$at_dir" \
    || as_fn_error $? "unable to change directory"
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || as_fn_error $? "invalid content: $at_file"
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: "${at_top_build_prefix=$at_top_builddir}"

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    eval at_val=\$at_$at_dir_var
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## -------------------- ##
## Directory structure. ##
## -------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite ($at_dir might have changed since earlier).
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop
# The fifo used for the job dispatcher.
at_job_fifo=$at_suite_dir/at-job-fifo

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`$as_echo "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -n "$at_path" && as_fn_append at_path $PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    as_fn_append at_path "$as_dir"
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      as_fn_append at_path "$as_dir"
    else
      # Embedded test suite.
      as_fn_append at_path "$at_top_build_prefix$as_dir$PATH_SEPARATOR"
      as_fn_append at_path "$at_top_srcdir/$as_dir"
    fi
    ;;
esac
  done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) as_fn_append at_new_path "$PATH_SEPARATOR$as_dir" ;;
esac
  done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.



# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
$as_echo "## ----------------------------------- ##
## libdap 3.20.8 test suite: dmr-test. ##
## ----------------------------------- ##"
{
  $as_echo "## ----------------------------------- ##
## libdap 3.20.8 test suite: dmr-test. ##
## ----------------------------------- ##"
  echo

  $as_echo "$as_me: command line was:"
  $as_echo "  \$ $0 $at_cli_args"
  echo

  # If ChangeLog exists, list a few lines in case it might help determining
  # the exact version.
  if test -n "$at_top_srcdir" && test -f "$at_top_srcdir/ChangeLog"; then
    $as_echo "## ---------- ##
## ChangeLog. ##
## ---------- ##"
    echo
    sed 's/^/| /;10q' "$at_top_srcdir/ChangeLog"
    echo
  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    $as_echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## ------------------------- ##
## Autotest shell functions. ##
## ------------------------- ##

# at_fn_banner NUMBER
# -------------------
# Output banner NUMBER, provided the testsuite is running multiple groups and
# this particular banner has not yet been printed.
at_fn_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = "x " && return 0
  eval "at_banner_text_$1=\" \""
  if test -z "$at_banner_text"; then
    $at_first || echo
  else
    $as_echo "$as_nl$at_banner_text$as_nl"
  fi
} # at_fn_banner

# at_fn_check_prepare_notrace REASON LINE
# ---------------------------------------
# Perform AT_CHECK preparations for the command at LINE for an untraceable
# command; REASON is the reason for disabling tracing.
at_fn_check_prepare_notrace ()
{
  $at_trace_echo "Not enabling shell tracing (command contains $1)"
  $as_echo "$2" >"$at_check_line_file"
  at_check_trace=: at_check_filter=:
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_trace LINE
# ------------------------------
# Perform AT_CHECK preparations for the command at LINE for a traceable
# command.
at_fn_check_prepare_trace ()
{
  $as_echo "$1" >"$at_check_line_file"
  at_check_trace=$at_traceon at_check_filter=$at_check_filter_trace
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_dynamic COMMAND LINE
# ----------------------------------------
# Decide if COMMAND at LINE is traceable at runtime, and call the appropriate
# preparation function.
at_fn_check_prepare_dynamic ()
{
  case $1 in
    *$as_nl*)
      at_fn_check_prepare_notrace 'an embedded newline' "$2" ;;
    *)
      at_fn_check_prepare_trace "$2" ;;
  esac
}

# at_fn_filter_trace
# ------------------
# Remove the lines in the file "$at_stderr" generated by "set -x" and print
# them to stderr.
at_fn_filter_trace ()
{
  mv "$at_stderr" "$at_stder1"
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
}

# at_fn_log_failure FILE-LIST
# ---------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_fn_log_failure ()
{
  for file
    do $as_echo "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_fn_check_skip EXIT-CODE LINE
# -------------------------------
# Check whether EXIT-CODE is a special exit code (77 or 99), and if so exit
# the test group subshell with that same exit code. Use LINE in any report
# about test failure.
at_fn_check_skip ()
{
  case $1 in
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$2: hard failure"; exit 99;;
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_fn_check_status EXPECTED EXIT-CODE LINE
# ------------------------------------------
# Check whether EXIT-CODE is the EXPECTED exit code, and if so do nothing.
# Otherwise, if it is 77 or 99, exit the test group subshell with that same
# exit code; if it is anything else print an error message referring to LINE,
# and fail the test.
at_fn_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$3: hard failure"; exit 99;;
    *) $as_echo "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_fn_diff_devnull FILE
# -----------------------
# Emit a diff between /dev/null and FILE. Uses "test -s" to avoid useless diff
# invocations.
at_fn_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_fn_test NUMBER
# -----------------
# Parse out test NUMBER from the tail of this file.
at_fn_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_fn_create_debugging_script
# -----------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_fn_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    $as_echo "cd '$at_dir'" &&
    $as_echo "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

## -------------------------------- ##
## End of autotest shell functions. ##
## -------------------------------- ##
{
  $as_echo "## ---------------- ##
## Tested programs. ##
## ---------------- ##"
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  case $at_program in
    [\\/]* | ?:[\\/]* ) $at_program_=$at_program ;;
    * )
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -f "$as_dir/$at_program" && break
  done
IFS=$as_save_IFS

    at_program_=$as_dir/$at_program ;;
  esac
  if test -f "$at_program_"; then
    {
      $as_echo "$at_srcdir/DMRTest.at:3: $at_program_ --version"
      "$at_program_" --version </dev/null
      echo
    } >&5 2>&1
  else
    as_fn_error $? "cannot find $at_program" "$LINENO" 5
  fi
done

{
  $as_echo "## ------------------ ##
## Running the tests. ##
## ------------------ ##"
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
$as_echo "$as_me: starting at: $at_start_date" >&5

# Create the master directory if it doesn't already exist.
as_dir="$at_suite_dir"; as_fn_mkdir_p ||
  as_fn_error $? "cannot create \`$at_suite_dir'" "$LINENO" 5

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  as_fn_error $? "cannot create test line number cache" "$LINENO" 5
rm -f "$at_suite_dir/at-source-lines"

# Set number of jobs for `-j'; avoid more jobs than test groups.
set X $at_groups; shift; at_max_jobs=$#
if test $at_max_jobs -eq 0; then
  at_jobs=1
fi
if test $at_jobs -ne 1 &&
   { test $at_jobs -eq 0 || test $at_jobs -gt $at_max_jobs; }; then
  at_jobs=$at_max_jobs
fi

# If parallel mode, don't output banners, don't split summary lines.
if test $at_jobs -ne 1; then
  at_print_banners=false
  at_quiet=:
fi

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
as_fn_error $? "testsuite directory setup failed" "$LINENO" 5

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_fn_group_prepare
# -------------------
# Prepare for running a test group.
at_fn_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  # If one already exists, the user may have invoked ./run from
  # within that directory; we remove the contents, but not the
  # directory itself, so that we aren't pulling the rug out from
  # under the shell's notion of the current directory.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"; then
  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx {} \;
  rm -fr "$at_group_dir"/* "$at_group_dir"/.[!.] "$at_group_dir"/.??*
fi ||
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: test directory for $at_group_normalized could not be cleaned" >&5
$as_echo "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned" >&2;}
  # Be tolerant if the above `rm' was not able to remove the directory.
  as_dir="$at_group_dir"; as_fn_mkdir_p

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_fn_group_banner ORDINAL LINE DESC PAD [BANNER]
# -------------------------------------------------
# Declare the test group ORDINAL, located at LINE with group description DESC,
# and residing under BANNER. Use PAD to align the status column.
at_fn_group_banner ()
{
  at_setup_line="$2"
  test -n "$5" && at_fn_banner $5
  at_desc="$3"
  case $1 in
    [0-9])      at_desc_line="  $1: ";;
    [0-9][0-9]) at_desc_line=" $1: " ;;
    *)          at_desc_line="$1: "  ;;
  esac
  as_fn_append at_desc_line "$3$4"
  $at_quiet $as_echo_n "$at_desc_line"
  echo "#                             -*- compilation -*-" >> "$at_group_log"
}

# at_fn_group_postprocess
# -----------------------
# Perform cleanup after running a test group.
at_fn_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <opendap-tech@opendap.org>.
_ATEOF
    $as_echo "$at_setup_line" >"$at_check_line_file"
    at_status=99
  fi
  $at_verbose $as_echo_n "$at_group. $at_setup_line: "
  $as_echo_n "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	at_color=$at_grn
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	at_color=$at_blu
	;;
    no:* | *:99)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	at_color=$at_lgn
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # In parallel mode, output the summary line only afterwards.
  if test $at_jobs -ne 1 && test -n "$at_verbose"; then
    $as_echo "$at_desc_line $at_color$at_msg$at_std"
  else
    # Make sure there is a separator even with long titles.
    $as_echo " $at_color$at_msg$at_std"
  fi
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      $as_echo "$at_log_msg" >> "$at_group_log"
      $as_echo "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files
      # or the success was unexpected.
      if $at_debug_p || test $at_res = xpass; then
	at_fn_create_debugging_script
	if test $at_res = xpass && $at_errexit; then
	  echo stop > "$at_stop_file"
	fi
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      $as_echo "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_fn_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##


if (set -m && set +m && set +b) >/dev/null 2>&1; then
  set +b
  at_job_control_on='set -m' at_job_control_off='set +m' at_job_group=-
else
  at_job_control_on=: at_job_control_off=: at_job_group=
fi

for at_signal in 1 2 15; do
  trap 'set +x; set +e
	$at_job_control_off
	at_signal='"$at_signal"'
	echo stop > "$at_stop_file"
	trap "" $at_signal
	at_pgids=
	for at_pgid in `jobs -p 2>/dev/null`; do
	  at_pgids="$at_pgids $at_job_group$at_pgid"
	done
	test -z "$at_pgids" || kill -$at_signal $at_pgids 2>/dev/null
	wait
	if test "$at_jobs" -eq 1 || test -z "$at_verbose"; then
	  echo >&2
	fi
	at_signame=`kill -l $at_signal 2>&1 || echo $at_signal`
	set x $at_signame
	test 1 -gt 2 && at_signame=$at_signal
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: caught signal $at_signame, bailing out" >&5
$as_echo "$as_me: WARNING: caught signal $at_signame, bailing out" >&2;}
	as_fn_arith 128 + $at_signal && exit_status=$as_val
	as_fn_exit $exit_status' $at_signal
done

rm -f "$at_stop_file"
at_first=:

if test $at_jobs -ne 1 &&
     rm -f "$at_job_fifo" &&
     test -n "$at_job_group" &&
     ( mkfifo "$at_job_fifo" && trap 'exit 1' PIPE STOP TSTP ) 2>/dev/null
then
  # FIFO job dispatcher.

  trap 'at_pids=
	for at_pid in `jobs -p`; do
	  at_pids="$at_pids $at_job_group$at_pid"
	done
	if test -n "$at_pids"; then
	  at_sig=TSTP
	  test "${TMOUT+set}" = set && at_sig=STOP
	  kill -$at_sig $at_pids 2>/dev/null
	fi
	kill -STOP $$
	test -z "$at_pids" || kill -CONT $at_pids 2>/dev/null' TSTP

  echo
  # Turn jobs into a list of numbers, starting from 1.
  at_joblist=`$as_echo "$at_groups" | sed -n 1,${at_jobs}p`

  set X $at_joblist
  shift
  for at_group in $at_groups; do
    $at_job_control_on 2>/dev/null
    (
      # Start one test group.
      $at_job_control_off
      if $at_first; then
	exec 7>"$at_job_fifo"
      else
	exec 6<&-
      fi
      trap 'set +x; set +e
	    trap "" PIPE
	    echo stop > "$at_stop_file"
	    echo >&7
	    as_fn_exit 141' PIPE
      at_fn_group_prepare
      if cd "$at_group_dir" &&
	 at_fn_test $at_group &&
	 . "$at_test_source"
      then :; else
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
	at_failed=:
      fi
      at_fn_group_postprocess
      echo >&7
    ) &
    $at_job_control_off
    if $at_first; then
      at_first=false
      exec 6<"$at_job_fifo" 7>"$at_job_fifo"
    fi
    shift # Consume one token.
    if test $# -gt 0; then :; else
      read at_token <&6 || break
      set x $*
    fi
    test -f "$at_stop_file" && break
  done
  exec 7>&-
  # Read back the remaining ($at_jobs - 1) tokens.
  set X $at_joblist
  shift
  if test $# -gt 0; then
    shift
    for at_job
    do
      read at_token
    done <&6
  fi
  exec 6<&-
  wait
else
  # Run serially, avoid forks and other potential surprises.
  for at_group in $at_groups; do
    at_fn_group_prepare
    if cd "$at_group_dir" &&
       at_fn_test $at_group &&
       . "$at_test_source"; then :; else
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
      at_failed=:
    fi
    at_fn_group_postprocess
    test -f "$at_stop_file" && break
    at_first=false
  done
fi

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

as_fn_arith $at_group_count - $at_skip_count && at_run_count=$as_val
as_fn_arith $at_xpass_count + $at_fail_count && at_unexpected_count=$as_val
as_fn_arith $at_xfail_count + $at_fail_count && at_total_fail_count=$as_val

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
$as_echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    as_fn_arith $at_stop_time - $at_start_time && at_duration_s=$as_val
    as_fn_arith $at_duration_s / 60 && at_duration_m=$as_val
    as_fn_arith $at_duration_m / 60 && at_duration_h=$as_val
    as_fn_arith $at_duration_s % 60 && at_duration_s=$as_val
    as_fn_arith $at_duration_m % 60 && at_duration_m=$as_val
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    $as_echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
$as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
echo
{
  echo
  $as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
  at_color=$at_red
else
  # Don't you just love exponential explosion of the number of cases?
  at_color=$at_red
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." at_color=$at_grn ;;
    0:0:*) at_result="$at_result behaved as expected." at_color=$at_lgn ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_color$at_result$at_std"
  echo "$at_result" >&5
else
  echo "${at_color}ERROR: $at_result$at_std" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    $as_echo "## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##"

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      $as_echo "## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##"
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  if $at_debug_p; then
    at_msg='per-test log files'
  else
    at_msg="\`${at_testdir+${at_testdir}/}$as_me.log'"
  fi
  $as_echo "Please send $at_msg and all information you think might help:

   To: <opendap-tech@opendap.org>
   Subject: [libdap 3.20.8] $as_me: $at_fail_list${at_fail_list:+ failed${at_xpass_list:+, }}$at_xpass_list${at_xpass_list:+ passed unexpectedly}

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below \`${at_testdir+${at_testdir}/}$as_me.dir'.
"
  exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
at_fn_group_banner 1 'DMRTest.at:262' \
  "parse dmr-testsuite/test_simple_1.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "1. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_1.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:262: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:262"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:262"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:262: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:262"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:262"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:262: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:262"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:262"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:262: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:262"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:262"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1
#AT_START_2
at_fn_group_banner 2 'DMRTest.at:263' \
  "parse dmr-testsuite/test_simple_2.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "2. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_2.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:263: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:263"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:263"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:263: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:263"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:263"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:263: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:263"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:263"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:263: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:263"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:263"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_2
#AT_START_3
at_fn_group_banner 3 'DMRTest.at:264' \
  "parse dmr-testsuite/test_simple_3.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "3. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_3.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:264: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:264"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:264: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:264"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:264: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:264"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:264: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:264"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_3
#AT_START_4
at_fn_group_banner 4 'DMRTest.at:266' \
  "parse dmr-testsuite/test_simple_3_error_1.xml" "  "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "4. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_3_error_1.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:266: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:266"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:266: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:266"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:266: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:266"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:266: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:266"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:266"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_4
#AT_START_5
at_fn_group_banner 5 'DMRTest.at:267' \
  "parse dmr-testsuite/test_simple_3_error_2.xml" "  "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "5. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_3_error_2.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:267: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:267"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:267"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:267: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:267"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:267"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:267: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:267"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:267"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:267: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:267"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:267"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_5
#AT_START_6
at_fn_group_banner 6 'DMRTest.at:268' \
  "parse dmr-testsuite/test_simple_3_error_3.xml" "  "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "6. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_3_error_3.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:268: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:268"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:268"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:268: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:268"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:268"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:268: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:268"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:268"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:268: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:268"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:268"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_6
#AT_START_7
at_fn_group_banner 7 'DMRTest.at:270' \
  "parse dmr-testsuite/test_simple_4.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "7. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_4.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:270: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:270"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:270: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:270"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:270: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:270"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:270: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:270"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_7
#AT_START_8
at_fn_group_banner 8 'DMRTest.at:271' \
  "parse dmr-testsuite/test_simple_5.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "8. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_5.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:271: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:271"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:271: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:271"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:271: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:271"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:271: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:271"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_8
#AT_START_9
at_fn_group_banner 9 'DMRTest.at:272' \
  "parse dmr-testsuite/test_simple_6.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "9. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_6.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:272: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:272"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:272: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:272"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:272: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:272"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:272: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:272"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_9
#AT_START_10
at_fn_group_banner 10 'DMRTest.at:273' \
  "parse dmr-testsuite/test_simple_7.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "10. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:273: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:273"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:273: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:273"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:273: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:273"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:273: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:273"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_10
#AT_START_11
at_fn_group_banner 11 'DMRTest.at:274' \
  "parse dmr-testsuite/test_simple_8.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "11. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_8.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:274: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:274"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:274"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:274: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:274"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:274"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:274: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:274"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:274"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:274: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:274"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:274"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_11
#AT_START_12
at_fn_group_banner 12 'DMRTest.at:275' \
  "parse dmr-testsuite/test_simple_9.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "12. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_9.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:275: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:275"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:275"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:275: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:275"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:275"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:275: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:275"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:275"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:275: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:275"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:275"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_12
#AT_START_13
at_fn_group_banner 13 'DMRTest.at:276' \
  "parse dmr-testsuite/test_simple_9.1.xml" "        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "13. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_9.1.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:276: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:276"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:276"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:276: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:276"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:276"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:276: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:276"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:276"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:276: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:276"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:276"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_13
#AT_START_14
at_fn_group_banner 14 'DMRTest.at:277' \
  "parse dmr-testsuite/test_simple_10.xml" "         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "14. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_10.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:277: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:277"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:277: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:277"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:277: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:277"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:277: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:277"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_14
#AT_START_15
at_fn_group_banner 15 'DMRTest.at:279' \
  "parse dmr-testsuite/test_array_1.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "15. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:279: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:279"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:279: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:279"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:279: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:279"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:279: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:279"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_15
#AT_START_16
at_fn_group_banner 16 'DMRTest.at:280' \
  "parse dmr-testsuite/test_array_2.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "16. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_2.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:280: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:280"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:280: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:280"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:280: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:280"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:280: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:280"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_16
#AT_START_17
at_fn_group_banner 17 'DMRTest.at:281' \
  "parse dmr-testsuite/test_array_3.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "17. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_3.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:281: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:281"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:281"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:281: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:281"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:281"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:281: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:281"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:281"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:281: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:281"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:281"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_17
#AT_START_18
at_fn_group_banner 18 'DMRTest.at:282' \
  "parse dmr-testsuite/test_array_4.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "18. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:282: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:282"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:282"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:282: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:282"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:282"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:282: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:282"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:282"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:282: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:282"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:282"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_18
#AT_START_19
at_fn_group_banner 19 'DMRTest.at:283' \
  "parse dmr-testsuite/test_array_5.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "19. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_5.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:283: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:283"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:283"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:283: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:283"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:283"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:283: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:283"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:283"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:283: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:283"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:283"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_19
#AT_START_20
at_fn_group_banner 20 'DMRTest.at:284' \
  "parse dmr-testsuite/test_array_6.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "20. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_6.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:284: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:284"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:284: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:284"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:284: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:284"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:284: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:284"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_20
#AT_START_21
at_fn_group_banner 21 'DMRTest.at:285' \
  "parse dmr-testsuite/test_array_7.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "21. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:285: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:285"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:285"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:285: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:285"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:285"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:285: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:285"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:285"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:285: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:285"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:285"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_21
#AT_START_22
at_fn_group_banner 22 'DMRTest.at:286' \
  "parse dmr-testsuite/test_array_8.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "22. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_8.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:286: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:286"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:286"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:286: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:286"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:286"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:286: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:286"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:286"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:286: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:286"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:286"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_22
#AT_START_23
at_fn_group_banner 23 'DMRTest.at:287' \
  "parse dmr-testsuite/test_array_10.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "23. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_10.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:287: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:287"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:287"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:287: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:287"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:287"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:287: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:287"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:287"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:287: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:287"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:287"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_23
#AT_START_24
at_fn_group_banner 24 'DMRTest.at:288' \
  "parse dmr-testsuite/test_array_11.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "24. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_11.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:288: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:288"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:288"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:288: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:288"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:288"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:288: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:288"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:288"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:288: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:288"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:288"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_24
#AT_START_25
at_fn_group_banner 25 'DMRTest.at:290' \
  "parse dmr-testsuite/ignore_foreign_xml_1.xml" "   "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "25. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/ignore_foreign_xml_1.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:290: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:290"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:290: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:290"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:290: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:290"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:290: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:290"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_25
#AT_START_26
at_fn_group_banner 26 'DMRTest.at:291' \
  "parse dmr-testsuite/ignore_foreign_xml_2.xml" "   "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "26. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/ignore_foreign_xml_2.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:291: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:291"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:291: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:291"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:291: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:291"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:291: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:291"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:291"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_26
#AT_START_27
at_fn_group_banner 27 'DMRTest.at:292' \
  "parse dmr-testsuite/ignore_foreign_xml_3.xml" "   "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "27. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/ignore_foreign_xml_3.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:292: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:292"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:292"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:292: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:292"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:292"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:292: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:292"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:292"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:292: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:292"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:292"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_27
#AT_START_28
at_fn_group_banner 28 'DMRTest.at:302' \
  "trans test_simple_1.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "28. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_1.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:302: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:302"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:302"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:302: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:302"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:302"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:302: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:302"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:302"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:302: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:302"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:302"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_28
#AT_START_29
at_fn_group_banner 29 'DMRTest.at:303' \
  "trans test_simple_2.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "29. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_2.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:303: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:303"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:303: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:303"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:303: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:303"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:303: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:303"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:303"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_29
#AT_START_30
at_fn_group_banner 30 'DMRTest.at:304' \
  "trans test_simple_3.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "30. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_3.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_3.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:304: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:304"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:304"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:304: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:304"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:304"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:304: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:304"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:304"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:304: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:304"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:304"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_30
#AT_START_31
at_fn_group_banner 31 'DMRTest.at:305' \
  "trans test_simple_4.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "31. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_4.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:305: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:305"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:305: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:305"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:305: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:305"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:305: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:305"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_31
#AT_START_32
at_fn_group_banner 32 'DMRTest.at:306' \
  "trans test_simple_5.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "32. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_5.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_5.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:306: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:306"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:306"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:306: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:306"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:306"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:306: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:306"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:306"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:306: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:306"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:306"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_32
#AT_START_33
at_fn_group_banner 33 'DMRTest.at:307' \
  "trans test_simple_6.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "33. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:307: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:307"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:307: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:307"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:307: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:307"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:307: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:307"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_33
#AT_START_34
at_fn_group_banner 34 'DMRTest.at:308' \
  "trans test_simple_7.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "34. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_7.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:308: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:308"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:308: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:308"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:308: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:308"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:308: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:308"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_34
#AT_START_35
at_fn_group_banner 35 'DMRTest.at:309' \
  "trans test_simple_8.xml" "                        "
at_xfail=no
      test "xfail" = "xfail" && at_xfail=yes
(
  $as_echo "35. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_8.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:309: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:309"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:309"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:309: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:309"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:309"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:309: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:309"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:309"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:309: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:309"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:309"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_35
#AT_START_36
at_fn_group_banner 36 'DMRTest.at:310' \
  "trans test_simple_9.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "36. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_9.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_9.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:310: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:310"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:310"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:310: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:310"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:310"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:310: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:310"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:310"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:310: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:310"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:310"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_36
#AT_START_37
at_fn_group_banner 37 'DMRTest.at:311' \
  "trans test_simple_9.1.xml" "                      "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "37. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_9.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_9.1.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:311: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:311"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:311"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:311: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:311"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:311"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:311: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:311"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:311"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:311: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:311"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:311"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_37
#AT_START_38
at_fn_group_banner 38 'DMRTest.at:312' \
  "trans test_simple_10.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "38. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_10.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_10.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:312: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:312"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:312"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:312: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:312"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:312"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:312: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:312"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:312"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:312: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:312"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:312"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_38
#AT_START_39
at_fn_group_banner 39 'DMRTest.at:314' \
  "trans test_array_1.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "39. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:314: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:314"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:314"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:314: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:314"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:314"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:314: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:314"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:314"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:314: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:314"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:314"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_39
#AT_START_40
at_fn_group_banner 40 'DMRTest.at:315' \
  "trans test_array_2.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "40. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_2.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:315: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:315"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:315: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:315"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:315: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:315"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:315: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:315"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_40
#AT_START_41
at_fn_group_banner 41 'DMRTest.at:316' \
  "trans test_array_3.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "41. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_3.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_3.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:316: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:316"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:316: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:316"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:316: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:316"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:316: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:316"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_41
#AT_START_42
at_fn_group_banner 42 'DMRTest.at:317' \
  "trans test_array_4.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "42. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:317: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:317"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:317"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:317: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:317"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:317"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:317: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:317"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:317"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:317: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:317"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:317"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_42
#AT_START_43
at_fn_group_banner 43 'DMRTest.at:318' \
  "trans test_array_5.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "43. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_5.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_5.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:318: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:318"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:318"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:318: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:318"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:318"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:318: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:318"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:318"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:318: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:318"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:318"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_43
#AT_START_44
at_fn_group_banner 44 'DMRTest.at:319' \
  "trans test_array_6.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "44. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:319: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:319"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:319: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:319"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:319: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:319"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:319: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:319"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:319"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_44
#AT_START_45
at_fn_group_banner 45 'DMRTest.at:320' \
  "trans test_array_7.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "45. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:320: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:320"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:320"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:320: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:320"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:320"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:320: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:320"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:320"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:320: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:320"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:320"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_45
#AT_START_46
at_fn_group_banner 46 'DMRTest.at:321' \
  "trans test_array_8.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "46. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_8.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:321: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:321"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:321"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:321: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:321"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:321"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:321: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:321"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:321"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:321: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:321"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:321"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_46
#AT_START_47
at_fn_group_banner 47 'DMRTest.at:322' \
  "trans test_array_10.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "47. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_10.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_10.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:322: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:322"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:322"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:322: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:322"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:322"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:322: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:322"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:322"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:322: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:322"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:322"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_47
#AT_START_48
at_fn_group_banner 48 'DMRTest.at:323' \
  "trans test_array_11.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "48. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_11.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_11.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:323: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:323"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:323: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:323"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:323: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:323"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:323: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:323"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_48
#AT_START_49
at_fn_group_banner 49 'DMRTest.at:325' \
  "intern test_simple_1.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "49. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_1.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:325: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:325"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:325"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:325: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:325"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:325"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:325: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:325"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:325"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:325: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:325"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:325"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_49
#AT_START_50
at_fn_group_banner 50 'DMRTest.at:326' \
  "intern test_simple_2.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "50. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_2.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:326: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:326"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:326: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:326"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:326: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:326"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:326: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:326"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:326"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_50
#AT_START_51
at_fn_group_banner 51 'DMRTest.at:327' \
  "intern test_simple_3.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "51. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_3.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_3.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:327: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:327"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:327"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:327: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:327"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:327"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:327: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:327"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:327"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:327: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:327"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:327"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_51
#AT_START_52
at_fn_group_banner 52 'DMRTest.at:328' \
  "intern test_simple_4.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "52. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_4.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:328: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:328"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:328"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:328: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:328"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:328"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:328: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:328"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:328"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:328: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:328"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:328"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_52
#AT_START_53
at_fn_group_banner 53 'DMRTest.at:329' \
  "intern test_simple_5.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "53. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_5.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_5.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:329: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:329"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:329: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:329"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:329: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:329"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:329: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:329"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:329"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_53
#AT_START_54
at_fn_group_banner 54 'DMRTest.at:330' \
  "intern test_simple_6.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "54. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:330: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:330"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:330"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:330: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:330"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:330"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:330: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:330"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:330"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:330: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:330"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:330"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_54
#AT_START_55
at_fn_group_banner 55 'DMRTest.at:331' \
  "intern test_simple_7.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "55. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_7.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:331: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:331"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:331: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:331"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:331: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:331"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:331: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:331"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_55
#AT_START_56
at_fn_group_banner 56 'DMRTest.at:332' \
  "intern test_simple_8.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "56. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_8.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:332: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:332"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:332"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:332: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:332"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:332"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:332: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:332"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:332"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:332: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:332"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:332"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_56
#AT_START_57
at_fn_group_banner 57 'DMRTest.at:333' \
  "intern test_simple_9.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "57. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_9.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_9.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:333: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:333"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:333: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:333"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:333: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:333"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:333: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:333"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:333"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_57
#AT_START_58
at_fn_group_banner 58 'DMRTest.at:334' \
  "intern test_simple_9.1.xml" "                     "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "58. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_9.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_9.1.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:334: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:334"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:334"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:334: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:334"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:334"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:334: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:334"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:334"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:334: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:334"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:334"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_58
#AT_START_59
at_fn_group_banner 59 'DMRTest.at:335' \
  "intern test_simple_10.xml" "                      "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "59. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_10.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_10.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:335: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:335"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:335"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:335: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:335"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:335"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:335: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:335"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:335"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:335: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:335"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:335"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_59
#AT_START_60
at_fn_group_banner 60 'DMRTest.at:337' \
  "intern test_array_1.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "60. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:337: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:337"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:337: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:337"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:337: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:337"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:337: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:337"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:337"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_60
#AT_START_61
at_fn_group_banner 61 'DMRTest.at:338' \
  "intern test_array_2.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "61. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_2.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:338: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:338"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:338: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:338"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:338: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:338"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:338: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:338"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_61
#AT_START_62
at_fn_group_banner 62 'DMRTest.at:339' \
  "intern test_array_3.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "62. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_3.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_3.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:339: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:339"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:339"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:339: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:339"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:339"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:339: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:339"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:339"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:339: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:339"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:339"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_62
#AT_START_63
at_fn_group_banner 63 'DMRTest.at:340' \
  "intern test_array_4.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "63. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:340: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:340"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:340"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:340: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:340"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:340"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:340: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:340"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:340"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:340: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:340"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:340"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_63
#AT_START_64
at_fn_group_banner 64 'DMRTest.at:341' \
  "intern test_array_5.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "64. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_5.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_5.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:341: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:341"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:341"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:341: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:341"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:341"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:341: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:341"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:341"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:341: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:341"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:341"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_64
#AT_START_65
at_fn_group_banner 65 'DMRTest.at:342' \
  "intern test_array_6.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "65. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:342: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:342"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:342"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:342: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:342"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:342"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:342: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:342"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:342"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:342: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:342"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:342"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_65
#AT_START_66
at_fn_group_banner 66 'DMRTest.at:343' \
  "intern test_array_7.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "66. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:343: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:343"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:343: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:343"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:343: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:343"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:343: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:343"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_66
#AT_START_67
at_fn_group_banner 67 'DMRTest.at:344' \
  "intern test_array_8.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "67. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_8.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:344: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:344"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:344"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:344: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:344"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:344"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:344: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:344"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:344"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:344: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:344"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:344"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_67
#AT_START_68
at_fn_group_banner 68 'DMRTest.at:345' \
  "intern test_array_10.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "68. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_10.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_10.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:345: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:345"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:345"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:345: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:345"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:345"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:345: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:345"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:345"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:345: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:345"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:345"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_68
#AT_START_69
at_fn_group_banner 69 'DMRTest.at:346' \
  "intern test_array_11.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "69. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_11.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_11.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:346: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:346"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:346"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:346: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:346"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:346"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:346: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:346"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:346"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:346: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:346"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:346"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_69
#AT_START_70
at_fn_group_banner 70 'DMRTest.at:349' \
  "parse dmr-testsuite/test_array_9.xml" "           "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "70. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_9.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:349: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:349"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:349: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:349"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:349: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:349"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:349: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:349"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_70
#AT_START_71
at_fn_group_banner 71 'DMRTest.at:350' \
  "parse dmr-testsuite/test_array_12.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "71. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_12.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:350: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:350"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:350: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:350"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:350: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:350"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:350: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:350"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_71
#AT_START_72
at_fn_group_banner 72 'DMRTest.at:351' \
  "parse dmr-testsuite/test_array_13.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "72. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_13.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:351: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:351"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:351: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:351"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:351: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:351"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:351: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:351"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:351"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_72
#AT_START_73
at_fn_group_banner 73 'DMRTest.at:352' \
  "parse dmr-testsuite/test_array_14.xml" "          "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "73. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_14.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:352: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:352"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:352"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:352: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:352"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:352"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:352: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:352"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:352"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:352: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:352"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:352"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_73
#AT_START_74
at_fn_group_banner 74 'DMRTest.at:355' \
  "parse dmr-testsuite/test_simple_6.2.xml" "        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "74. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_6.2.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:355: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:355"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:355"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:355: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:355"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:355"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:355: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:355"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:355"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:355: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:355"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:355"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_74
#AT_START_75
at_fn_group_banner 75 'DMRTest.at:356' \
  "parse dmr-testsuite/test_simple_6.3.xml" "        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "75. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_6.3.xml
    baseline=$input.baseline

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:356: \$abs_builddir/dmr-test -x -p \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input" "DMRTest.at:356"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:356"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:356: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:356"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:356"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:356: \$abs_builddir/dmr-test -x -p \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input || true" "DMRTest.at:356"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:356"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:356: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:356"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:356"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_75
#AT_START_76
at_fn_group_banner 76 'DMRTest.at:358' \
  "trans test_array_9.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "76. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_9.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_9.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:358: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:358"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:358"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:358: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:358"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:358"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:358: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:358"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:358"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:358: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:358"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:358"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_76
#AT_START_77
at_fn_group_banner 77 'DMRTest.at:359' \
  "trans test_array_12.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "77. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_12.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_12.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:359: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:359"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:359"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:359: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:359"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:359"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:359: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:359"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:359"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:359: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:359"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:359"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_77
#AT_START_78
at_fn_group_banner 78 'DMRTest.at:360' \
  "trans test_array_13.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "78. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_13.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_13.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:360: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:360"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:360"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:360: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:360"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:360"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:360: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:360"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:360"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:360: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:360"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:360"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_78
#AT_START_79
at_fn_group_banner 79 'DMRTest.at:361' \
  "trans test_array_14.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "79. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_14.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_14.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:361: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:361"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:361: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:361"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:361: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:361"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:361: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:361"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_79
#AT_START_80
at_fn_group_banner 80 'DMRTest.at:363' \
  "trans test_simple_6.2.xml" "                      "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "80. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.2.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:363: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:363"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:363: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:363"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:363: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:363"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:363: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:363"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:363"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_80
#AT_START_81
at_fn_group_banner 81 'DMRTest.at:364' \
  "trans test_simple_6.3.xml" "                      "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "81. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_6.3.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.3.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:364: \$abs_builddir/dmr-test -x -t \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input" "DMRTest.at:364"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:364: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:364"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:364: \$abs_builddir/dmr-test -x -t \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input || true" "DMRTest.at:364"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:364: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:364"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_81
#AT_START_82
at_fn_group_banner 82 'DMRTest.at:367' \
  "trans test_array_9.xml" "                         "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "82. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_9.xml
    baseline=$abs_srcdir/dmr-testsuite/universal/test_array_9.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        echo "The command <>$abs_builddir/dmr-test -x -t $input $checksum_filt<>"

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:367: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:367"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:367"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:367: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:367"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:367"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:367: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:367"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:367"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:367: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:367"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:367"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_82
#AT_START_83
at_fn_group_banner 83 'DMRTest.at:368' \
  "trans test_array_12.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "83. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_12.xml
    baseline=$abs_srcdir/dmr-testsuite/universal/test_array_12.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        echo "The command <>$abs_builddir/dmr-test -x -t $input $checksum_filt<>"

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:368: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:368"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:368: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:368"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:368: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:368"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:368: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:368"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_83
#AT_START_84
at_fn_group_banner 84 'DMRTest.at:369' \
  "trans test_array_13.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "84. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_13.xml
    baseline=$abs_srcdir/dmr-testsuite/universal/test_array_13.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        echo "The command <>$abs_builddir/dmr-test -x -t $input $checksum_filt<>"

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:369: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:369"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:369"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:369: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:369"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:369"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:369: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:369"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:369"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:369: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:369"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:369"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_84
#AT_START_85
at_fn_group_banner 85 'DMRTest.at:370' \
  "trans test_array_14.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "85. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_array_14.xml
    baseline=$abs_srcdir/dmr-testsuite/universal/test_array_14.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        echo "The command <>$abs_builddir/dmr-test -x -t $input $checksum_filt<>"

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:370: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:370"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:370"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:370: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:370"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:370"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:370: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:370"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:370"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:370: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:370"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:370"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_85
#AT_START_86
at_fn_group_banner 86 'DMRTest.at:372' \
  "trans test_simple_6.2.xml" "                      "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "86. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_6.2.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        echo "The command <>$abs_builddir/dmr-test -x -t $input $checksum_filt<>"

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:372: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:372"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:372"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:372: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:372"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:372"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:372: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:372"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:372"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:372: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:372"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:372"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_86
#AT_START_87
at_fn_group_banner 87 'DMRTest.at:373' \
  "trans test_simple_6.3.xml" "                      "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "87. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15

    input=$abs_srcdir/dmr-testsuite/test_simple_6.3.xml
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_6.3.xml.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        echo "The command <>$abs_builddir/dmr-test -x -t $input $checksum_filt<>"

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [0], [stdout], [ignore])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:373: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:373"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:373"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:373: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:373"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:373"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:373: \$abs_builddir/dmr-test -x -t \$input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:373"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:373"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:373: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:373"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:373"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_87
#AT_START_88
at_fn_group_banner 88 'DMRTest.at:375' \
  "intern test_array_9.xml" "                        "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "88. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_9.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_9.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:375: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:375"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:375"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:375: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:375"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:375"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:375: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:375"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:375"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:375: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:375"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:375"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_88
#AT_START_89
at_fn_group_banner 89 'DMRTest.at:376' \
  "intern test_array_12.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "89. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_12.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_12.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:376: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:376"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:376"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:376: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:376"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:376"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:376: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:376"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:376"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:376: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:376"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:376"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_89
#AT_START_90
at_fn_group_banner 90 'DMRTest.at:377' \
  "intern test_array_13.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "90. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_13.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_13.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:377: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:377"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:377"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:377: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:377"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:377"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:377: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:377"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:377"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:377: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:377"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:377"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_90
#AT_START_91
at_fn_group_banner 91 'DMRTest.at:378' \
  "intern test_array_14.xml" "                       "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "91. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_array_14.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_14.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:378: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:378"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:378: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:378"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:378: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:378"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:378: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:378"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:378"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_91
#AT_START_92
at_fn_group_banner 92 'DMRTest.at:380' \
  "intern test_simple_6.2.xml" "                     "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "92. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.2.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:380: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:380"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:380"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:380: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:380"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:380"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:380: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:380"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:380"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:380: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:380"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:380"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_92
#AT_START_93
at_fn_group_banner 93 'DMRTest.at:381' \
  "intern test_simple_6.3.xml" "                     "
at_xfail=no
      test "pass" = "xfail" && at_xfail=yes
(
  $as_echo "93. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # WORD_ORDER is set by configure in atlocal.
    # This is a fix for the issue where the CRC32 checksum is different
    # on little- and big-endian machines, so we use different baseline
    # files.  jhrg 9/30/15
    input=$abs_srcdir/dmr-testsuite/test_simple_6.3.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.3.xml.intern_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -i $input], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:381: \$abs_builddir/dmr-test -x -i \$input"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input" "DMRTest.at:381"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:381: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:381"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:381: \$abs_builddir/dmr-test -x -i \$input || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -i $input || true" "DMRTest.at:381"
( $at_check_trace; $abs_builddir/dmr-test -x -i $input || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:381: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:381"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }




fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_93
#AT_START_94
at_fn_group_banner 94 'DMRTest.at:397' \
  "trans ce test_array_3.1.dmr row;x test_array_3.1.dmr.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "94. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_3.1.dmr
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_3.1.dmr.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "row;x"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"row;x\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"row;x\"" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "row;x"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:397"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"row;x\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"row;x\" || true" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "row;x" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:397"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_94
#AT_START_95
at_fn_group_banner 95 'DMRTest.at:397' \
  "trans ce test_array_3.1.dmr row=[2:3];x test_array_3.1.dmr.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "95. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_3.1.dmr
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_3.1.dmr.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "row=[[2:3]];x"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"row=[2:3];x\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"row=[2:3];x\"" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "row=[2:3];x"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:397"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"row=[2:3];x\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"row=[2:3];x\" || true" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "row=[2:3];x" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:397"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_95
#AT_START_96
at_fn_group_banner 96 'DMRTest.at:397' \
  "trans ce test_array_3.1.dmr row=[2:3];x[0:1] test_array_3.1.dmr.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "96. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_3.1.dmr
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_3.1.dmr.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "row=[[2:3]];x[[0:1]]"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"row=[2:3];x[0:1]\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"row=[2:3];x[0:1]\"" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "row=[2:3];x[0:1]"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:397"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"row=[2:3];x[0:1]\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"row=[2:3];x[0:1]\" || true" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "row=[2:3];x[0:1]" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:397"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_96
#AT_START_97
at_fn_group_banner 97 'DMRTest.at:397' \
  "trans ce test_array_3.1.dmr x[0:1] test_array_3.1.dmr.4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "97. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_3.1.dmr
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_3.1.dmr.4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "x[[0:1]]"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"x[0:1]\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"x[0:1]\"" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "x[0:1]"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:397"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"x[0:1]\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"x[0:1]\" || true" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "x[0:1]" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:397"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_97
#AT_START_98
at_fn_group_banner 98 'DMRTest.at:397' \
  "trans ce test_array_3.1.dmr x test_array_3.1.dmr.5.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "98. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_3.1.dmr
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_3.1.dmr.5.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "x"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"x\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"x\"" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "x"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:397"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: \$abs_builddir/dmr-test -x -t \$input -c \"x\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"x\" || true" "DMRTest.at:397"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "x" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:397: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:397"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:397"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_98
#AT_START_99
at_fn_group_banner 99 'DMRTest.at:401' \
  "trans ce test_array_4.xml a test_array_4.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "99. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:401: \$abs_builddir/dmr-test -x -t \$input -c \"a\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a\"" "DMRTest.at:401"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:401: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:401"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:401: \$abs_builddir/dmr-test -x -t \$input -c \"a\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a\" || true" "DMRTest.at:401"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:401: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:401"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:401"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_99
#AT_START_100
at_fn_group_banner 100 'DMRTest.at:402' \
  "trans ce test_array_4.xml a[][]  test_array_4.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "100. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a[[]][[]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:402: \$abs_builddir/dmr-test -x -t \$input -c \"a[][] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a[][] \"" "DMRTest.at:402"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a[][] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:402"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:402: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:402"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:402"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:402: \$abs_builddir/dmr-test -x -t \$input -c \"a[][] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a[][] \" || true" "DMRTest.at:402"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a[][] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:402"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:402: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:402"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:402"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_100
#AT_START_101
at_fn_group_banner 101 'DMRTest.at:404' \
  "trans ce test_array_4.xml /row=[0:1];/col=[3];a test_array_4.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "101. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[0:1]];/col=[[3]];a"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:404: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];/col=[3];a\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];/col=[3];a\"" "DMRTest.at:404"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];/col=[3];a"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:404"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:404: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:404"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:404"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:404: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];/col=[3];a\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];/col=[3];a\" || true" "DMRTest.at:404"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];/col=[3];a" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:404"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:404: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:404"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:404"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_101
#AT_START_102
at_fn_group_banner 102 'DMRTest.at:406' \
  "trans ce test_array_4.xml /row=[0:1];/col=[3];a[][]  test_array_4.xml.4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "102. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[0:1]];/col=[[3]];a[[]][[]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:406: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];/col=[3];a[][] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];/col=[3];a[][] \"" "DMRTest.at:406"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];/col=[3];a[][] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:406"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:406: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:406"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:406"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:406: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];/col=[3];a[][] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];/col=[3];a[][] \" || true" "DMRTest.at:406"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];/col=[3];a[][] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:406"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:406: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:406"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:406"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_102
#AT_START_103
at_fn_group_banner 103 'DMRTest.at:408' \
  "trans ce test_array_4.xml /row=[0:1];/col=[3];a[][];b[0][];c[0:][0:]  test_array_4.xml.5.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "103. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.5.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[0:1]];/col=[[3]];a[[]][[]];b[[0]][[]];c[[0:]][[0:]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:408: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];/col=[3];a[][];b[0][];c[0:][0:] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];/col=[3];a[][];b[0][];c[0:][0:] \"" "DMRTest.at:408"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];/col=[3];a[][];b[0][];c[0:][0:] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:408"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:408: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:408"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:408"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:408: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];/col=[3];a[][];b[0][];c[0:][0:] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];/col=[3];a[][];b[0][];c[0:][0:] \" || true" "DMRTest.at:408"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];/col=[3];a[][];b[0][];c[0:][0:] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:408"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:408: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:408"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:408"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_103
#AT_START_104
at_fn_group_banner 104 'DMRTest.at:410' \
  "trans ce test_array_4.xml x[][]  /test_array_4.xml.6.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "104. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER//test_array_4.xml.6.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "x[[]][[]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:410: \$abs_builddir/dmr-test -x -t \$input -c \"x[][] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"x[][] \"" "DMRTest.at:410"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "x[][] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:410"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:410: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:410"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:410"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:410: \$abs_builddir/dmr-test -x -t \$input -c \"x[][] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"x[][] \" || true" "DMRTest.at:410"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "x[][] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:410"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:410: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:410"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:410"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_104
#AT_START_105
at_fn_group_banner 105 'DMRTest.at:411' \
  "trans ce test_array_4.xml /row=[0:1];x[][]  test_array_4.xml.7.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "105. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.7.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[0:1]];x[[]][[]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:411: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];x[][] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];x[][] \"" "DMRTest.at:411"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];x[][] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:411: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:411"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:411: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];x[][] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];x[][] \" || true" "DMRTest.at:411"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];x[][] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:411: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:411"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:411"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_105
#AT_START_106
at_fn_group_banner 106 'DMRTest.at:413' \
  "trans ce test_array_4.xml c[2:][2:]  test_array_4.xml.8.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "106. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_4.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_4.xml.8.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "c[[2:]][[2:]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:413: \$abs_builddir/dmr-test -x -t \$input -c \"c[2:][2:] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"c[2:][2:] \"" "DMRTest.at:413"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "c[2:][2:] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:413: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:413"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:413: \$abs_builddir/dmr-test -x -t \$input -c \"c[2:][2:] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"c[2:][2:] \" || true" "DMRTest.at:413"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "c[2:][2:] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:413: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:413"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:413"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_106
#AT_START_107
at_fn_group_banner 107 'DMRTest.at:415' \
  "trans ce test_simple_6.xml s test_simple_6.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "107. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:415: \$abs_builddir/dmr-test -x -t \$input -c \"s\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s\"" "DMRTest.at:415"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:415"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:415: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:415"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:415"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:415: \$abs_builddir/dmr-test -x -t \$input -c \"s\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s\" || true" "DMRTest.at:415"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:415"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:415: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:415"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:415"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_107
#AT_START_108
at_fn_group_banner 108 'DMRTest.at:416' \
  "trans ce test_simple_6.xml s.i1 test_simple_6.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "108. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.i1"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:416: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1\"" "DMRTest.at:416"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:416"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:416: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:416"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:416"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:416: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1\" || true" "DMRTest.at:416"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:416"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:416: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:416"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:416"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_108
#AT_START_109
at_fn_group_banner 109 'DMRTest.at:417' \
  "trans ce test_simple_6.xml s.s test_simple_6.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "109. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.s"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:417: \$abs_builddir/dmr-test -x -t \$input -c \"s.s\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.s\"" "DMRTest.at:417"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.s"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:417: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:417"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:417: \$abs_builddir/dmr-test -x -t \$input -c \"s.s\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.s\" || true" "DMRTest.at:417"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.s" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:417: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:417"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:417"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_109
#AT_START_110
at_fn_group_banner 110 'DMRTest.at:418' \
  "trans ce test_simple_6.1.xml s.inner.i2 test_simple_6.1.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "110. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.1.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.inner.i2"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:418: \$abs_builddir/dmr-test -x -t \$input -c \"s.inner.i2\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.inner.i2\"" "DMRTest.at:418"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.inner.i2"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:418"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:418: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:418"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:418"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:418: \$abs_builddir/dmr-test -x -t \$input -c \"s.inner.i2\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.inner.i2\" || true" "DMRTest.at:418"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.inner.i2" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:418"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:418: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:418"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:418"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_110
#AT_START_111
at_fn_group_banner 111 'DMRTest.at:420' \
  "trans ce test_simple_6.xml s{i1} test_simple_6.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "111. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:420: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1}\"" "DMRTest.at:420"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:420"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:420: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:420"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:420"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:420: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1}\" || true" "DMRTest.at:420"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:420"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:420: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:420"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:420"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_111
#AT_START_112
at_fn_group_banner 112 'DMRTest.at:421' \
  "trans ce test_simple_6.xml s{s} test_simple_6.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "112. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{s}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:421: \$abs_builddir/dmr-test -x -t \$input -c \"s{s}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{s}\"" "DMRTest.at:421"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{s}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:421: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:421"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:421: \$abs_builddir/dmr-test -x -t \$input -c \"s{s}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{s}\" || true" "DMRTest.at:421"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{s}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:421: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:421"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_112
#AT_START_113
at_fn_group_banner 113 'DMRTest.at:422' \
  "trans ce test_simple_6.1.xml s{inner.i2} test_simple_6.1.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "113. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.1.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{inner.i2}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:422: \$abs_builddir/dmr-test -x -t \$input -c \"s{inner.i2}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{inner.i2}\"" "DMRTest.at:422"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{inner.i2}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:422"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:422: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:422"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:422"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:422: \$abs_builddir/dmr-test -x -t \$input -c \"s{inner.i2}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{inner.i2}\" || true" "DMRTest.at:422"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{inner.i2}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:422"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:422: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:422"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:422"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_113
#AT_START_114
at_fn_group_banner 114 'DMRTest.at:423' \
  "trans ce test_simple_6.1.xml s{inner{i2}} test_simple_6.1.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "114. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_6.1.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{inner{i2}}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:423: \$abs_builddir/dmr-test -x -t \$input -c \"s{inner{i2}}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{inner{i2}}\"" "DMRTest.at:423"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{inner{i2}}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:423: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:423"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:423: \$abs_builddir/dmr-test -x -t \$input -c \"s{inner{i2}}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{inner{i2}}\" || true" "DMRTest.at:423"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{inner{i2}}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:423: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:423"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:423"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_114
#AT_START_115
at_fn_group_banner 115 'DMRTest.at:426' \
  "trans ce test_array_6.xml a test_array_6.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "115. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:426: \$abs_builddir/dmr-test -x -t \$input -c \"a\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a\"" "DMRTest.at:426"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:426"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:426: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:426"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:426"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:426: \$abs_builddir/dmr-test -x -t \$input -c \"a\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a\" || true" "DMRTest.at:426"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:426"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:426: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:426"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:426"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_115
#AT_START_116
at_fn_group_banner 116 'DMRTest.at:427' \
  "trans ce test_array_6.xml a[][]  test_array_6.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "116. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a[[]][[]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:427: \$abs_builddir/dmr-test -x -t \$input -c \"a[][] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a[][] \"" "DMRTest.at:427"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a[][] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:427"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:427: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:427"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:427"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:427: \$abs_builddir/dmr-test -x -t \$input -c \"a[][] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a[][] \" || true" "DMRTest.at:427"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a[][] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:427"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:427: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:427"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:427"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_116
#AT_START_117
at_fn_group_banner 117 'DMRTest.at:428' \
  "trans ce test_array_6.xml /row=[0:1];a[][]  test_array_6.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "117. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[0:1]];a[[]][[]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:428: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];a[][] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];a[][] \"" "DMRTest.at:428"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];a[][] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:428"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:428: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:428"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:428"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:428: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];a[][] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];a[][] \" || true" "DMRTest.at:428"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];a[][] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:428"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:428: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:428"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:428"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_117
#AT_START_118
at_fn_group_banner 118 'DMRTest.at:429' \
  "trans ce test_array_6.xml /row=[0:1];a[][1:2]  test_array_6.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "118. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[0:1]];a[[]][[1:2]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:429: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];a[][1:2] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];a[][1:2] \"" "DMRTest.at:429"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];a[][1:2] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:429: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:429"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:429: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];a[][1:2] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];a[][1:2] \" || true" "DMRTest.at:429"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];a[][1:2] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:429: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:429"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_118
#AT_START_119
at_fn_group_banner 119 'DMRTest.at:432' \
  "trans ce test_array_6.2.xml a test_array_6.2.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "119. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:432: \$abs_builddir/dmr-test -x -t \$input -c \"a\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a\"" "DMRTest.at:432"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:432: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:432"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:432: \$abs_builddir/dmr-test -x -t \$input -c \"a\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a\" || true" "DMRTest.at:432"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:432: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:432"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_119
#AT_START_120
at_fn_group_banner 120 'DMRTest.at:433' \
  "trans ce test_array_6.2.xml a{i;j} test_array_6.2.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "120. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a{i;j}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:433: \$abs_builddir/dmr-test -x -t \$input -c \"a{i;j}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a{i;j}\"" "DMRTest.at:433"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a{i;j}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:433"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:433: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:433"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:433"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:433: \$abs_builddir/dmr-test -x -t \$input -c \"a{i;j}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a{i;j}\" || true" "DMRTest.at:433"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a{i;j}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:433"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:433: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:433"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:433"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_120
#AT_START_121
at_fn_group_banner 121 'DMRTest.at:434' \
  "trans ce test_array_6.2.xml a.i test_array_6.2.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "121. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a.i"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:434: \$abs_builddir/dmr-test -x -t \$input -c \"a.i\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a.i\"" "DMRTest.at:434"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a.i"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:434: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:434"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:434: \$abs_builddir/dmr-test -x -t \$input -c \"a.i\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a.i\" || true" "DMRTest.at:434"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a.i" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:434: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:434"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:434"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_121
#AT_START_122
at_fn_group_banner 122 'DMRTest.at:435' \
  "trans ce test_array_6.2.xml a{i} test_array_6.2.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "122. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a{i}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:435: \$abs_builddir/dmr-test -x -t \$input -c \"a{i}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a{i}\"" "DMRTest.at:435"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a{i}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:435"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:435: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:435"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:435"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:435: \$abs_builddir/dmr-test -x -t \$input -c \"a{i}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a{i}\" || true" "DMRTest.at:435"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a{i}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:435"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:435: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:435"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:435"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_122
#AT_START_123
at_fn_group_banner 123 'DMRTest.at:436' \
  "trans ce test_array_6.2.xml a.i[0][1:2]  test_array_6.2.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "123. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a.i[[0]][[1:2]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:436: \$abs_builddir/dmr-test -x -t \$input -c \"a.i[0][1:2] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a.i[0][1:2] \"" "DMRTest.at:436"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a.i[0][1:2] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:436"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:436: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:436"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:436"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:436: \$abs_builddir/dmr-test -x -t \$input -c \"a.i[0][1:2] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a.i[0][1:2] \" || true" "DMRTest.at:436"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a.i[0][1:2] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:436"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:436: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:436"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:436"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_123
#AT_START_124
at_fn_group_banner 124 'DMRTest.at:437' \
  "trans ce test_array_6.2.xml a{i[0][1:2]}  test_array_6.2.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "124. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a{i[[0]][[1:2]]} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:437: \$abs_builddir/dmr-test -x -t \$input -c \"a{i[0][1:2]} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a{i[0][1:2]} \"" "DMRTest.at:437"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a{i[0][1:2]} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:437"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:437: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:437"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:437"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:437: \$abs_builddir/dmr-test -x -t \$input -c \"a{i[0][1:2]} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a{i[0][1:2]} \" || true" "DMRTest.at:437"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a{i[0][1:2]} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:437"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:437: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:437"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:437"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_124
#AT_START_125
at_fn_group_banner 125 'DMRTest.at:438' \
  "trans ce test_array_6.2.xml /row=[0:1];a.i[][1:2]  test_array_6.2.xml.4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "125. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[0:1]];a.i[[]][[1:2]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:438: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];a.i[][1:2] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];a.i[][1:2] \"" "DMRTest.at:438"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];a.i[][1:2] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:438"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:438: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:438"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:438"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:438: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];a.i[][1:2] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];a.i[][1:2] \" || true" "DMRTest.at:438"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];a.i[][1:2] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:438"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:438: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:438"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:438"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_125
#AT_START_126
at_fn_group_banner 126 'DMRTest.at:439' \
  "trans ce test_array_6.2.xml /row=[0:1];a{i[][1:2]}  test_array_6.2.xml.4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "126. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[0:1]];a{i[[]][[1:2]]} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:439: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];a{i[][1:2]} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];a{i[][1:2]} \"" "DMRTest.at:439"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];a{i[][1:2]} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:439: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:439"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:439: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[0:1];a{i[][1:2]} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[0:1];a{i[][1:2]} \" || true" "DMRTest.at:439"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[0:1];a{i[][1:2]} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:439: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:439"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:439"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_126
#AT_START_127
at_fn_group_banner 127 'DMRTest.at:441' \
  "trans ce test_array_6.2.xml a.j test_array_6.2.xml.5.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "127. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.2.xml.5.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a.j"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:441: \$abs_builddir/dmr-test -x -t \$input -c \"a.j\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a.j\"" "DMRTest.at:441"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a.j"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:441: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:441"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:441: \$abs_builddir/dmr-test -x -t \$input -c \"a.j\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a.j\" || true" "DMRTest.at:441"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a.j" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:441: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:441"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:441"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_127
#AT_START_128
at_fn_group_banner 128 'DMRTest.at:444' \
  "trans ce test_array_6.1.xml a test_array_6.1.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "128. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.1.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:444: \$abs_builddir/dmr-test -x -t \$input -c \"a\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a\"" "DMRTest.at:444"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:444"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:444: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:444"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:444"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:444: \$abs_builddir/dmr-test -x -t \$input -c \"a\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a\" || true" "DMRTest.at:444"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:444"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:444: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:444"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:444"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_128
#AT_START_129
at_fn_group_banner 129 'DMRTest.at:447' \
  "trans ce test_array_6.1.xml /row=[1:2];a[][0]  test_array_6.1.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "129. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.1.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[1:2]];a[[]][[0]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:447: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[1:2];a[][0] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[1:2];a[][0] \"" "DMRTest.at:447"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[1:2];a[][0] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:447"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:447: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:447"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:447"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:447: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[1:2];a[][0] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[1:2];a[][0] \" || true" "DMRTest.at:447"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[1:2];a[][0] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:447"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:447: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:447"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:447"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_129
#AT_START_130
at_fn_group_banner 130 'DMRTest.at:448' \
  "trans ce test_array_6.1.xml /row=[1:2];a[][0]{i;j}  test_array_6.1.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "130. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.1.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[1:2]];a[[]][[0]]{i;j} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:448: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[1:2];a[][0]{i;j} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[1:2];a[][0]{i;j} \"" "DMRTest.at:448"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[1:2];a[][0]{i;j} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:448: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:448"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:448: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[1:2];a[][0]{i;j} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[1:2];a[][0]{i;j} \" || true" "DMRTest.at:448"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[1:2];a[][0]{i;j} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:448: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:448"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_130
#AT_START_131
at_fn_group_banner 131 'DMRTest.at:450' \
  "trans ce test_array_6.1.xml row=[1:2];a[][0]{i;j}  test_array_6.1.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "131. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.1.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "row=[[1:2]];a[[]][[0]]{i;j} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:450: \$abs_builddir/dmr-test -x -t \$input -c \"row=[1:2];a[][0]{i;j} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"row=[1:2];a[][0]{i;j} \"" "DMRTest.at:450"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "row=[1:2];a[][0]{i;j} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:450: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:450"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:450: \$abs_builddir/dmr-test -x -t \$input -c \"row=[1:2];a[][0]{i;j} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"row=[1:2];a[][0]{i;j} \" || true" "DMRTest.at:450"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "row=[1:2];a[][0]{i;j} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:450: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:450"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_131
#AT_START_132
at_fn_group_banner 132 'DMRTest.at:453' \
  "trans ce test_array_6.1.xml a{i[1:2][1:3];j}  test_array_6.1.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "132. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.1.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a{i[[1:2]][[1:3]];j} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:453: \$abs_builddir/dmr-test -x -t \$input -c \"a{i[1:2][1:3];j} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a{i[1:2][1:3];j} \"" "DMRTest.at:453"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a{i[1:2][1:3];j} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:453: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:453"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:453: \$abs_builddir/dmr-test -x -t \$input -c \"a{i[1:2][1:3];j} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a{i[1:2][1:3];j} \" || true" "DMRTest.at:453"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a{i[1:2][1:3];j} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:453: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:453"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_132
#AT_START_133
at_fn_group_banner 133 'DMRTest.at:454' \
  "trans ce test_array_6.1.xml a[][]{i[1:2][1:3];j}  test_array_6.1.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "133. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.1.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "a[[]][[]]{i[[1:2]][[1:3]];j} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:454: \$abs_builddir/dmr-test -x -t \$input -c \"a[][]{i[1:2][1:3];j} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a[][]{i[1:2][1:3];j} \"" "DMRTest.at:454"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a[][]{i[1:2][1:3];j} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:454: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:454"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:454: \$abs_builddir/dmr-test -x -t \$input -c \"a[][]{i[1:2][1:3];j} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"a[][]{i[1:2][1:3];j} \" || true" "DMRTest.at:454"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "a[][]{i[1:2][1:3];j} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:454: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:454"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:454"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_133
#AT_START_134
at_fn_group_banner 134 'DMRTest.at:458' \
  "trans ce test_array_6.1.xml /row=[1];a[][0]{i[][0:1]}  test_array_6.1.xml.4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "134. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_6.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_6.1.xml.4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[1]];a[[]][[0]]{i[[]][[0:1]]} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:458: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[1];a[][0]{i[][0:1]} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[1];a[][0]{i[][0:1]} \"" "DMRTest.at:458"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[1];a[][0]{i[][0:1]} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:458"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:458: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:458"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:458"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:458: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[1];a[][0]{i[][0:1]} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[1];a[][0]{i[][0:1]} \" || true" "DMRTest.at:458"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[1];a[][0]{i[][0:1]} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:458"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:458: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:458"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:458"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_134
#AT_START_135
at_fn_group_banner 135 'DMRTest.at:461' \
  "trans ce test_simple_7.xml s test_simple_7.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "135. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_7.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:461: \$abs_builddir/dmr-test -x -t \$input -c \"s\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s\"" "DMRTest.at:461"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:461"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:461: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:461"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:461"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:461: \$abs_builddir/dmr-test -x -t \$input -c \"s\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s\" || true" "DMRTest.at:461"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:461"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:461: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:461"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:461"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_135
#AT_START_136
at_fn_group_banner 136 'DMRTest.at:462' \
  "trans ce test_simple_7.xml s{i1;s} test_simple_7.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "136. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_7.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{i1;s}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:462: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1;s}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1;s}\"" "DMRTest.at:462"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1;s}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:462: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:462"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:462: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1;s}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1;s}\" || true" "DMRTest.at:462"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1;s}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:462: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:462"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_136
#AT_START_137
at_fn_group_banner 137 'DMRTest.at:464' \
  "trans ce test_simple_7.xml s.i1 test_simple_7.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "137. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_7.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.i1"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:464: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1\"" "DMRTest.at:464"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:464"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:464: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:464"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:464"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:464: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1\" || true" "DMRTest.at:464"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:464"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:464: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:464"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:464"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_137
#AT_START_138
at_fn_group_banner 138 'DMRTest.at:465' \
  "trans ce test_simple_7.xml s{i1} test_simple_7.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "138. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_7.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:465: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1}\"" "DMRTest.at:465"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:465"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:465: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:465"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:465"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:465: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1}\" || true" "DMRTest.at:465"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:465"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:465: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:465"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:465"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_138
#AT_START_139
at_fn_group_banner 139 'DMRTest.at:467' \
  "trans ce test_simple_8.xml outer test_simple_8.xml.1.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "139. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_8.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "outer"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:467: \$abs_builddir/dmr-test -x -t \$input -c \"outer\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"outer\"" "DMRTest.at:467"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "outer"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:467"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:467: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:467"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:467"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:467: \$abs_builddir/dmr-test -x -t \$input -c \"outer\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"outer\" || true" "DMRTest.at:467"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "outer" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:467"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:467: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:467"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:467"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_139
#AT_START_140
at_fn_group_banner 140 'DMRTest.at:468' \
  "trans ce test_simple_8.xml outer.s.s test_simple_8.xml.2.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "140. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_8.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "outer.s.s"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:468: \$abs_builddir/dmr-test -x -t \$input -c \"outer.s.s\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"outer.s.s\"" "DMRTest.at:468"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "outer.s.s"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:468"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:468: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:468"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:468"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:468: \$abs_builddir/dmr-test -x -t \$input -c \"outer.s.s\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"outer.s.s\" || true" "DMRTest.at:468"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "outer.s.s" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:468"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:468: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:468"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:468"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_140
#AT_START_141
at_fn_group_banner 141 'DMRTest.at:469' \
  "trans ce test_simple_8.xml outer{s{s}} test_simple_8.xml.2.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "141. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_simple_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_simple_8.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "outer{s{s}}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:469: \$abs_builddir/dmr-test -x -t \$input -c \"outer{s{s}}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"outer{s{s}}\"" "DMRTest.at:469"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "outer{s{s}}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:469: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:469"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:469: \$abs_builddir/dmr-test -x -t \$input -c \"outer{s{s}}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"outer{s{s}}\" || true" "DMRTest.at:469"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "outer{s{s}}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:469: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:469"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:469"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_141
#AT_START_142
at_fn_group_banner 142 'DMRTest.at:471' \
  "trans ce test_array_7.xml s test_array_7.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "142. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:471: \$abs_builddir/dmr-test -x -t \$input -c \"s\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s\"" "DMRTest.at:471"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:471"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:471: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:471"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:471"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:471: \$abs_builddir/dmr-test -x -t \$input -c \"s\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s\" || true" "DMRTest.at:471"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:471"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:471: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:471"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:471"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_142
#AT_START_143
at_fn_group_banner 143 'DMRTest.at:472' \
  "trans ce test_array_7.xml s{i1;s} test_array_7.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "143. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{i1;s}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:472: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1;s}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1;s}\"" "DMRTest.at:472"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1;s}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:472"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:472: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:472"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:472"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:472: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1;s}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1;s}\" || true" "DMRTest.at:472"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1;s}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:472"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:472: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:472"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:472"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_143
#AT_START_144
at_fn_group_banner 144 'DMRTest.at:474' \
  "trans ce test_array_7.xml s.i1 test_array_7.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "144. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.i1"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:474: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1\"" "DMRTest.at:474"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:474"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:474: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:474"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:474"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:474: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1\" || true" "DMRTest.at:474"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:474"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:474: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:474"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:474"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_144
#AT_START_145
at_fn_group_banner 145 'DMRTest.at:475' \
  "trans ce test_array_7.xml s{i1} test_array_7.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "145. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:475: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1}\"" "DMRTest.at:475"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:475"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:475: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:475"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:475"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:475: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1}\" || true" "DMRTest.at:475"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:475"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:475: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:475"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:475"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_145
#AT_START_146
at_fn_group_banner 146 'DMRTest.at:477' \
  "trans ce test_array_7.xml s[1]  test_array_7.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "146. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s[[1]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:477: \$abs_builddir/dmr-test -x -t \$input -c \"s[1] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s[1] \"" "DMRTest.at:477"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s[1] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:477"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:477: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:477"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:477"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:477: \$abs_builddir/dmr-test -x -t \$input -c \"s[1] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s[1] \" || true" "DMRTest.at:477"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s[1] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:477"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:477: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:477"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:477"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_146
#AT_START_147
at_fn_group_banner 147 'DMRTest.at:478' \
  "trans ce test_array_7.xml s[1]{i1;s} test_array_7.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "147. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s[[1]]{i1;s}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:478: \$abs_builddir/dmr-test -x -t \$input -c \"s[1]{i1;s}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s[1]{i1;s}\"" "DMRTest.at:478"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s[1]{i1;s}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:478"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:478: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:478"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:478"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:478: \$abs_builddir/dmr-test -x -t \$input -c \"s[1]{i1;s}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s[1]{i1;s}\" || true" "DMRTest.at:478"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s[1]{i1;s}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:478"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:478: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:478"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:478"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_147
#AT_START_148
at_fn_group_banner 148 'DMRTest.at:480' \
  "trans ce test_array_7.xml s[1]{i1} test_array_7.xml.4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "148. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.xml.4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s[[1]]{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:480: \$abs_builddir/dmr-test -x -t \$input -c \"s[1]{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s[1]{i1}\"" "DMRTest.at:480"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s[1]{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:480: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:480"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:480: \$abs_builddir/dmr-test -x -t \$input -c \"s[1]{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s[1]{i1}\" || true" "DMRTest.at:480"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s[1]{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:480: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:480"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_148
#AT_START_149
at_fn_group_banner 149 'DMRTest.at:483' \
  "trans ce test_array_8.xml /col=[1:2];s[1][]{i1} test_array_8.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "149. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_8.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s[[1]][[]]{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:483: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[1][]{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[1][]{i1}\"" "DMRTest.at:483"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[1][]{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:483: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:483"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:483: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[1][]{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[1][]{i1}\" || true" "DMRTest.at:483"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[1][]{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:483: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:483"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:483"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_149
#AT_START_150
at_fn_group_banner 150 'DMRTest.at:484' \
  "trans ce test_array_8.xml col=[1:2];s[1][]{i1} test_array_8.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "150. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_8.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_8.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "col=[[1:2]];s[[1]][[]]{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:484: \$abs_builddir/dmr-test -x -t \$input -c \"col=[1:2];s[1][]{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"col=[1:2];s[1][]{i1}\"" "DMRTest.at:484"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "col=[1:2];s[1][]{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:484"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:484: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:484"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:484"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:484: \$abs_builddir/dmr-test -x -t \$input -c \"col=[1:2];s[1][]{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"col=[1:2];s[1][]{i1}\" || true" "DMRTest.at:484"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "col=[1:2];s[1][]{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:484"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:484: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:484"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:484"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_150
#AT_START_151
at_fn_group_banner 151 'DMRTest.at:487' \
  "trans ce test_array_7.1.xml  test_array_7.1.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "151. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c ""], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:487: \$abs_builddir/dmr-test -x -t \$input -c \"\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"\"" "DMRTest.at:487"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c ""
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:487: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:487"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:487: \$abs_builddir/dmr-test -x -t \$input -c \"\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"\" || true" "DMRTest.at:487"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:487: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:487"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_151
#AT_START_152
at_fn_group_banner 152 'DMRTest.at:488' \
  "trans ce test_array_7.1.xml s test_array_7.1.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "152. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:488: \$abs_builddir/dmr-test -x -t \$input -c \"s\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s\"" "DMRTest.at:488"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:488"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:488: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:488"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:488"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:488: \$abs_builddir/dmr-test -x -t \$input -c \"s\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s\" || true" "DMRTest.at:488"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:488"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:488: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:488"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:488"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_152
#AT_START_153
at_fn_group_banner 153 'DMRTest.at:490' \
  "trans ce test_array_7.1.xml s.i1 test_array_7.1.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "153. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.i1"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:490: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1\"" "DMRTest.at:490"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:490"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:490: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:490"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:490"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:490: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1\" || true" "DMRTest.at:490"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:490"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:490: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:490"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:490"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_153
#AT_START_154
at_fn_group_banner 154 'DMRTest.at:491' \
  "trans ce test_array_7.1.xml s.i1[][]  test_array_7.1.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "154. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.i1[[]][[]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:491: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1[][] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1[][] \"" "DMRTest.at:491"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1[][] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:491: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:491"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:491: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1[][] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1[][] \" || true" "DMRTest.at:491"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1[][] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:491: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:491"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:491"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_154
#AT_START_155
at_fn_group_banner 155 'DMRTest.at:492' \
  "trans ce test_array_7.1.xml s{i1} test_array_7.1.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "155. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:492: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1}\"" "DMRTest.at:492"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:492"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:492: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:492"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:492"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:492: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1}\" || true" "DMRTest.at:492"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:492"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:492: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:492"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:492"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_155
#AT_START_156
at_fn_group_banner 156 'DMRTest.at:493' \
  "trans ce test_array_7.1.xml s{i1[][]}  test_array_7.1.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "156. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{i1[[]][[]]} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:493: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1[][]} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1[][]} \"" "DMRTest.at:493"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1[][]} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:493: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:493"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:493: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1[][]} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1[][]} \" || true" "DMRTest.at:493"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1[][]} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:493: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:493"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_156
#AT_START_157
at_fn_group_banner 157 'DMRTest.at:495' \
  "trans ce test_array_7.1.xml s.i1[0][0]  test_array_7.1.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "157. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.i1[[0]][[0]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:495: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1[0][0] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1[0][0] \"" "DMRTest.at:495"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1[0][0] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:495"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:495: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:495"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:495"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:495: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1[0][0] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1[0][0] \" || true" "DMRTest.at:495"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1[0][0] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:495"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:495: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:495"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:495"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_157
#AT_START_158
at_fn_group_banner 158 'DMRTest.at:496' \
  "trans ce test_array_7.1.xml s{i1[0][0]}  test_array_7.1.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "158. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s{i1[[0]][[0]]} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:496: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1[0][0]} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1[0][0]} \"" "DMRTest.at:496"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1[0][0]} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:496"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:496: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:496"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:496"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:496: \$abs_builddir/dmr-test -x -t \$input -c \"s{i1[0][0]} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s{i1[0][0]} \" || true" "DMRTest.at:496"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s{i1[0][0]} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:496"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:496: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:496"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:496"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_158
#AT_START_159
at_fn_group_banner 159 'DMRTest.at:498' \
  "trans ce test_array_7.1.xml s.i1[0:2][1:2]  test_array_7.1.xml.4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "159. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "s.i1[[0:2]][[1:2]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:498: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1[0:2][1:2] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1[0:2][1:2] \"" "DMRTest.at:498"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1[0:2][1:2] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:498"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:498: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:498"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:498"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:498: \$abs_builddir/dmr-test -x -t \$input -c \"s.i1[0:2][1:2] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"s.i1[0:2][1:2] \" || true" "DMRTest.at:498"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "s.i1[0:2][1:2] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:498"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:498: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:498"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:498"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_159
#AT_START_160
at_fn_group_banner 160 'DMRTest.at:502' \
  "trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s  test_array_7.1.xml.5.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "160. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.5.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[2:3]];/col=[[2:3]];s "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:502: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s \"" "DMRTest.at:502"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:502: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:502"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:502: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s \" || true" "DMRTest.at:502"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:502: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:502"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_160
#AT_START_161
at_fn_group_banner 161 'DMRTest.at:504' \
  "trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s.i1  test_array_7.1.xml.6.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "161. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.6.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[2:3]];/col=[[2:3]];s.i1 "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:504: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s.i1 \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s.i1 \"" "DMRTest.at:504"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s.i1 "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:504"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:504: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:504"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:504"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:504: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s.i1 \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s.i1 \" || true" "DMRTest.at:504"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s.i1 " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:504"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:504: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:504"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:504"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_161
#AT_START_162
at_fn_group_banner 162 'DMRTest.at:505' \
  "trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s.i1[][]  test_array_7.1.xml.6.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "162. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.6.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[2:3]];/col=[[2:3]];s.i1[[]][[]] "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:505: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s.i1[][] \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s.i1[][] \"" "DMRTest.at:505"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s.i1[][] "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:505"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:505: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:505"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:505"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:505: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s.i1[][] \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s.i1[][] \" || true" "DMRTest.at:505"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s.i1[][] " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:505"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:505: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:505"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:505"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_162
#AT_START_163
at_fn_group_banner 163 'DMRTest.at:506' \
  "trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s{i1}  test_array_7.1.xml.6.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "163. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.6.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[2:3]];/col=[[2:3]];s{i1} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:506: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s{i1} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s{i1} \"" "DMRTest.at:506"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s{i1} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:506"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:506: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:506"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:506"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:506: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s{i1} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s{i1} \" || true" "DMRTest.at:506"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s{i1} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:506"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:506: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:506"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:506"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_163
#AT_START_164
at_fn_group_banner 164 'DMRTest.at:507' \
  "trans ce test_array_7.1.xml /row=[2:3];/col=[2:3];s{i1[][]}  test_array_7.1.xml.6.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "164. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.1.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.1.xml.6.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/row=[[2:3]];/col=[[2:3]];s{i1[[]][[]]} "], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:507: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s{i1[][]} \""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s{i1[][]} \"" "DMRTest.at:507"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s{i1[][]} "
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:507"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:507: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:507"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:507"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:507: \$abs_builddir/dmr-test -x -t \$input -c \"/row=[2:3];/col=[2:3];s{i1[][]} \" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/row=[2:3];/col=[2:3];s{i1[][]} \" || true" "DMRTest.at:507"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/row=[2:3];/col=[2:3];s{i1[][]} " || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:507"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:507: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:507"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:507"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_164
#AT_START_165
at_fn_group_banner 165 'DMRTest.at:510' \
  "trans ce test_array_7.2.xml /col=[1:2];s[]{i1} test_array_7.2.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "165. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.2.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s[[]]{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:510: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[]{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[]{i1}\"" "DMRTest.at:510"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[]{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:510"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:510: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:510"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:510"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:510: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[]{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[]{i1}\" || true" "DMRTest.at:510"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[]{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:510"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:510: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:510"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:510"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_165
#AT_START_166
at_fn_group_banner 166 'DMRTest.at:511' \
  "trans ce test_array_7.2.xml /col=[1:2];s[]{i1[][]} test_array_7.2.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "166. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.2.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s[[]]{i1[[]][[]]}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:511: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[]{i1[][]}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[]{i1[][]}\"" "DMRTest.at:511"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[]{i1[][]}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:511"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:511: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:511"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:511"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:511: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[]{i1[][]}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[]{i1[][]}\" || true" "DMRTest.at:511"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[]{i1[][]}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:511"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:511: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:511"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:511"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_166
#AT_START_167
at_fn_group_banner 167 'DMRTest.at:512' \
  "trans ce test_array_7.2.xml /col=[1:2];s{i1[][]} test_array_7.2.xml.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "167. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.2.xml.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s{i1[[]][[]]}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:512: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s{i1[][]}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s{i1[][]}\"" "DMRTest.at:512"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s{i1[][]}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:512"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:512: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:512"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:512"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:512: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s{i1[][]}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s{i1[][]}\" || true" "DMRTest.at:512"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s{i1[][]}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:512"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:512: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:512"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:512"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_167
#AT_START_168
at_fn_group_banner 168 'DMRTest.at:514' \
  "trans ce test_array_7.2.xml /col=[1:2];s[]{i1[0][]} test_array_7.2.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "168. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.2.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s[[]]{i1[[0]][[]]}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:514: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[]{i1[0][]}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[]{i1[0][]}\"" "DMRTest.at:514"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[]{i1[0][]}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:514"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:514: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:514"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:514"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:514: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[]{i1[0][]}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[]{i1[0][]}\" || true" "DMRTest.at:514"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[]{i1[0][]}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:514"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:514: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:514"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:514"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_168
#AT_START_169
at_fn_group_banner 169 'DMRTest.at:515' \
  "trans ce test_array_7.2.xml /col=[1:2];s{i1[0][]} test_array_7.2.xml.2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "169. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.2.xml.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s{i1[[0]][[]]}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:515: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s{i1[0][]}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s{i1[0][]}\"" "DMRTest.at:515"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s{i1[0][]}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:515"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:515: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:515"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:515"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:515: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s{i1[0][]}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s{i1[0][]}\" || true" "DMRTest.at:515"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s{i1[0][]}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:515"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:515: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:515"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:515"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_169
#AT_START_170
at_fn_group_banner 170 'DMRTest.at:517' \
  "trans ce test_array_7.2.xml /col=[1:2];s[0]{i1} test_array_7.2.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "170. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.2.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s[[0]]{i1}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:517: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[0]{i1}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[0]{i1}\"" "DMRTest.at:517"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[0]{i1}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:517"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:517: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:517"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:517"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:517: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[0]{i1}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[0]{i1}\" || true" "DMRTest.at:517"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[0]{i1}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:517"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:517: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:517"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:517"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_170
#AT_START_171
at_fn_group_banner 171 'DMRTest.at:518' \
  "trans ce test_array_7.2.xml /col=[1:2];s[0]{i1[][]} test_array_7.2.xml.3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "171. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.2.xml.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s[[0]]{i1[[]][[]]}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:518: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[0]{i1[][]}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[0]{i1[][]}\"" "DMRTest.at:518"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[0]{i1[][]}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:518"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:518: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:518"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:518"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:518: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[0]{i1[][]}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[0]{i1[][]}\" || true" "DMRTest.at:518"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[0]{i1[][]}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:518"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:518: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:518"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:518"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_171
#AT_START_172
at_fn_group_banner 172 'DMRTest.at:520' \
  "trans ce test_array_7.2.xml /col=[1:2];s[0]{i1[0][]} test_array_7.2.xml.4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "172. $at_setup_line: testing $at_desc ..."
  $at_traceon



    # See above regarding $WORD_ORDER
    input=$abs_srcdir/dmr-testsuite/test_array_7.2.xml
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_7.2.xml.4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -c "/col=[[1:2]];s[[0]]{i1[[0]][[]]}"], [], [stdout], []) old version

        { set +x
$as_echo "$at_srcdir/DMRTest.at:520: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[0]{i1[0][]}\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[0]{i1[0][]}\"" "DMRTest.at:520"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[0]{i1[0][]}"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:520"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:520: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:520"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:520"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:520: \$abs_builddir/dmr-test -x -t \$input -c \"/col=[1:2];s[0]{i1[0][]}\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -c \"/col=[1:2];s[0]{i1[0][]}\" || true" "DMRTest.at:520"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -c "/col=[1:2];s[0]{i1[0][]}" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:520"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:520: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:520"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:520"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_172
#AT_START_173
at_fn_group_banner 173 'DMRTest.at:524' \
  "trans test_array_1.xml scale(x,1)  test_array_1.xml.1.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "173. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    fe="scale(x,1)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.1.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:524: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:524"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:524: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:524"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:524: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:524"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:524: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:524"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:524"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_173
#AT_START_174
at_fn_group_banner 174 'DMRTest.at:525' \
  "trans test_array_1.xml scale(x,10)  test_array_1.xml.2.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "174. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    fe="scale(x,10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.2.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:525: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:525"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:525"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:525: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:525"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:525"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:525: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:525"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:525"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:525: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:525"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:525"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_174
#AT_START_175
at_fn_group_banner 175 'DMRTest.at:526' \
  "trans test_array_1.xml scale(x,-10)  test_array_1.xml.3.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "175. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    fe="scale(x,-10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.3.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:526: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:526"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:526"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:526: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:526"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:526"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:526: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:526"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:526"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:526: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:526"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:526"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_175
#AT_START_176
at_fn_group_banner 176 'DMRTest.at:527' \
  "trans test_array_1.xml scale(x,0.001)  test_array_1.xml.4.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "176. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    fe="scale(x,0.001)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.4.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:527: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:527"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:527"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:527: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:527"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:527"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:527: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:527"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:527"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:527: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:527"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:527"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_176
#AT_START_177
at_fn_group_banner 177 'DMRTest.at:528' \
  "trans test_array_1.xml scale(x,-0.001)  test_array_1.xml.5.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "177. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    fe="scale(x,-0.001)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.5.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:528: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:528"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:528"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:528: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:528"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:528"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:528: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:528"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:528"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:528: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:528"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:528"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_177
#AT_START_178
at_fn_group_banner 178 'DMRTest.at:532' \
  "trans test_array_1.xml scale(x,0x7fffffffffffffff)  test_array_1.xml.6.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "178. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    fe="scale(x,0x7fffffffffffffff)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.6.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:532: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:532"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:532"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:532: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:532"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:532"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:532: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:532"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:532"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:532: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:532"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:532"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_178
#AT_START_179
at_fn_group_banner 179 'DMRTest.at:534' \
  "trans test_array_1.xml scale(x,0x8fffffffffffffff)  test_array_1.xml.7.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "179. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_1.xml
    fe="scale(x,0x8fffffffffffffff)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_1.xml.7.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:534: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:534"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:534"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:534: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:534"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:534"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:534: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:534"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:534"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:534: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:534"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:534"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_179
#AT_START_180
at_fn_group_banner 180 'DMRTest.at:538' \
  "trans test_array_5.xml scale(a,0.001)  test_array_5.xml.1.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "180. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_5.xml
    fe="scale(a,0.001)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_5.xml.1.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:538: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:538"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:538"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:538: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:538"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:538"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:538: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:538"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:538"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:538: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:538"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:538"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_180
#AT_START_181
at_fn_group_banner 181 'DMRTest.at:539' \
  "trans test_array_5.xml scale(b,0.001)  test_array_5.xml.2.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "181. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_5.xml
    fe="scale(b,0.001)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_5.xml.2.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:539: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:539"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:539"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:539: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:539"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:539"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:539: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:539"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:539"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:539: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:539"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:539"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_181
#AT_START_182
at_fn_group_banner 182 'DMRTest.at:541' \
  "trans test_array_5.xml scale(c,0.001)  test_array_5.xml.3.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "182. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_5.xml
    fe="scale(c,0.001)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_5.xml.3.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:541: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:541"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:541"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:541: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:541"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:541"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:541: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:541"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:541"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:541: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:541"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:541"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_182
#AT_START_183
at_fn_group_banner 183 'DMRTest.at:542' \
  "trans test_array_5.xml scale(d,0.001)  test_array_5.xml.4.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "183. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_array_5.xml
    fe="scale(d,0.001)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/test_array_5.xml.4.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:542: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:542"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:542"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:542: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:542"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:542"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:542: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:542"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:542"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:542: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:542"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:542"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_183
#AT_START_184
at_fn_group_banner 184 'DMRTest.at:547' \
  "trans vol_1_ce_1.xml scale(u,10)  vol_1_ce_1.xml.1.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "184. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(u,10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.1.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:547: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:547"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:547"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:547: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:547"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:547"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:547: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:547"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:547"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:547: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:547"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:547"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_184
#AT_START_185
at_fn_group_banner 185 'DMRTest.at:548' \
  "trans vol_1_ce_1.xml scale(u,v)  vol_1_ce_1.xml.2.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "185. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(u,v)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.2.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:548: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:548"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:548"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:548: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:548"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:548"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:548: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:548"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:548"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:548: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:548"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:548"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_185
#AT_START_186
at_fn_group_banner 186 'DMRTest.at:549' \
  "trans vol_1_ce_1.xml scale(scale(u,10),0.01)  vol_1_ce_1.xml.3.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "186. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(scale(u,10),0.01)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.3.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:549: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:549"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:549"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:549: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:549"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:549"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:549: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:549"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:549"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:549: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:549"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:549"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_186
#AT_START_187
at_fn_group_banner 187 'DMRTest.at:552' \
  "trans vol_1_ce_1.xml scale(Point.x,10)  vol_1_ce_1.xml.4.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "187. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(Point.x,10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.4.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:552: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:552"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:552"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:552: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:552"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:552"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:552: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:552"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:552"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:552: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:552"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:552"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_187
#AT_START_188
at_fn_group_banner 188 'DMRTest.at:553' \
  "trans vol_1_ce_1.xml scale(Point.x,Point.y)  vol_1_ce_1.xml.5.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "188. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(Point.x,Point.y)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.5.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:553: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:553"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:553: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:553"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:553: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:553"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:553: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:553"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:553"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_188
#AT_START_189
at_fn_group_banner 189 'DMRTest.at:554' \
  "trans vol_1_ce_1.xml scale(scale(Point.x,10),0.01)  vol_1_ce_1.xml.6.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "189. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(scale(Point.x,10),0.01)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.6.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:554: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:554"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:554"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:554: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:554"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:554"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:554: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:554"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:554"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:554: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:554"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:554"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_189
#AT_START_190
at_fn_group_banner 190 'DMRTest.at:557' \
  "trans vol_1_ce_1.xml scale(\\\$Byte(20:1,2,3,4),10)  vol_1_ce_1.xml.7.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "190. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$Byte(20:1,2,3,4),10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.7.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:557: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:557"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:557"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:557: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:557"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:557"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:557: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:557"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:557"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:557: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:557"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:557"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_190
#AT_START_191
at_fn_group_banner 191 'DMRTest.at:558' \
  "trans vol_1_ce_1.xml scale(\\\$Int8(20:10,11,12,-9),10)  vol_1_ce_1.xml.8.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "191. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$Int8(20:10,11,12,-9),10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.8.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:558: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:558"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:558"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:558: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:558"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:558"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:558: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:558"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:558"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:558: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:558"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:558"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_191
#AT_START_192
at_fn_group_banner 192 'DMRTest.at:559' \
  "trans vol_1_ce_1.xml scale(\\\$UInt16(20:1,2,3,4),10)  vol_1_ce_1.xml.9.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "192. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$UInt16(20:1,2,3,4),10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.9.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:559: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:559"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:559"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:559: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:559"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:559"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:559: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:559"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:559"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:559: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:559"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:559"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_192
#AT_START_193
at_fn_group_banner 193 'DMRTest.at:560' \
  "trans vol_1_ce_1.xml scale(\\\$Int16(20:1,2,3,-4),10)  vol_1_ce_1.xml.10.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "193. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$Int16(20:1,2,3,-4),10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.10.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:560: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:560"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:560"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:560: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:560"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:560"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:560: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:560"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:560"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:560: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:560"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:560"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_193
#AT_START_194
at_fn_group_banner 194 'DMRTest.at:561' \
  "trans vol_1_ce_1.xml scale(\\\$UInt32(20:1,2,3,4),10)  vol_1_ce_1.xml.11.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "194. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$UInt32(20:1,2,3,4),10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.11.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:561: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:561"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:561"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:561: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:561"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:561"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:561: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:561"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:561"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:561: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:561"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:561"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_194
#AT_START_195
at_fn_group_banner 195 'DMRTest.at:562' \
  "trans vol_1_ce_1.xml scale(\\\$Int32(20:1,2,3,-4),10)  vol_1_ce_1.xml.12.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "195. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$Int32(20:1,2,3,-4),10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.12.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:562: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:562"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:562"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:562: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:562"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:562"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:562: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:562"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:562"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:562: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:562"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:562"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_195
#AT_START_196
at_fn_group_banner 196 'DMRTest.at:563' \
  "trans vol_1_ce_1.xml scale(\\\$UInt64(20:1,2,3,0xffffffffffffffff),1)  vol_1_ce_1.xml.13.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "196. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$UInt64(20:1,2,3,0xffffffffffffffff),1)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.13.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:563: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:563"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:563"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:563: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:563"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:563"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:563: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:563"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:563"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:563: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:563"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:563"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_196
#AT_START_197
at_fn_group_banner 197 'DMRTest.at:564' \
  "trans vol_1_ce_1.xml scale(\\\$Int64(20:1,2,3,0x7fffffffffffffff),1)  vol_1_ce_1.xml.14.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "197. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$Int64(20:1,2,3,0x7fffffffffffffff),1)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.14.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:564: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:564"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:564"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:564: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:564"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:564"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:564: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:564"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:564"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:564: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:564"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:564"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_197
#AT_START_198
at_fn_group_banner 198 'DMRTest.at:565' \
  "trans vol_1_ce_1.xml scale(\\\$Float32(20:1,2,3,4.55),10)  vol_1_ce_1.xml.15.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "198. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$Float32(20:1,2,3,4.55),10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.15.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:565: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:565"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:565"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:565: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:565"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:565"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:565: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:565"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:565"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:565: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:565"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:565"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_198
#AT_START_199
at_fn_group_banner 199 'DMRTest.at:566' \
  "trans vol_1_ce_1.xml scale(\\\$Float64(20:1,2,3,4.55),10)  vol_1_ce_1.xml.16.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "199. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_1.xml
    fe="scale(\$Float64(20:1,2,3,4.55),10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_1.xml.16.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:566: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:566"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:566"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:566: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:566"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:566"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:566: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:566"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:566"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:566: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:566"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:566"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_199
#AT_START_200
at_fn_group_banner 200 'DMRTest.at:570' \
  "trans vol_1_ce_10.xml scale(lat,10)  vol_1_ce_10.xml.1.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "200. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_10.xml
    fe="scale(lat,10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_10.xml.1.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:570: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:570"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:570"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:570: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:570"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:570"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:570: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:570"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:570"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:570: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:570"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:570"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_200
#AT_START_201
at_fn_group_banner 201 'DMRTest.at:571' \
  "trans vol_1_ce_10.xml scale(lat,10);scale(lon,10)  vol_1_ce_10.xml.2.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "201. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_10.xml
    fe="scale(lat,10);scale(lon,10)"
    ce=""
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_10.xml.2.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:571: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:571"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:571"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:571: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:571"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:571"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:571: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:571"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:571"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:571: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:571"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:571"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_201
#AT_START_202
at_fn_group_banner 202 'DMRTest.at:572' \
  "trans vol_1_ce_10.xml scale(lat,10);scale(lon,10) lat[10:11][10:11];lon[10:11][10:11] vol_1_ce_10.xml.3.func_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "202. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_10.xml
    fe="scale(lat,10);scale(lon,10)"
    ce="lat[10:11][10:11];lon[10:11][10:11]"
    baseline=$abs_srcdir/dmr-testsuite/$WORD_ORDER/vol_1_ce_10.xml.3.func_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:572: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\""
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\"" "DMRTest.at:572"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:572"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:572: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:572"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:572"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:572: \$abs_builddir/dmr-test -x -t \$input -f \"\$fe\" -c \"\$ce\" || true"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -t $input -f \"$fe\" -c \"$ce\" || true" "DMRTest.at:572"
( $at_check_trace; $abs_builddir/dmr-test -x -t $input -f "$fe" -c "$ce" || true
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:572"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:572: diff -b -B \$baseline stdout || diff -b -B \$baseline stderr"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout || diff -b -B $baseline stderr" "DMRTest.at:572"
( $at_check_trace; diff -b -B $baseline stdout || diff -b -B $baseline stderr
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:572"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_202
#AT_START_203
at_fn_group_banner 203 'DMRTest.at:579' \
  "filter test_simple_7.xml s test_simple_7.xml.f.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "203. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:579: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:579"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:579"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:579: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:579"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:579"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:579: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:579"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:579"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:579: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:579"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:579"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_203
#AT_START_204
at_fn_group_banner 204 'DMRTest.at:581' \
  "filter test_simple_7.xml s|i1==1024 test_simple_7.xml.f1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "204. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|i1==1024"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:581: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:581"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:581"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:581: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:581"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:581"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:581: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:581"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:581"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:581: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:581"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:581"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_204
#AT_START_205
at_fn_group_banner 205 'DMRTest.at:582' \
  "filter test_simple_7.xml s|i1!=1024 test_simple_7.xml.f2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "205. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|i1!=1024"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:582: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:582"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:582"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:582: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:582"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:582"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:582: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:582"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:582"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:582: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:582"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:582"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_205
#AT_START_206
at_fn_group_banner 206 'DMRTest.at:583' \
  "filter test_simple_7.xml s|i1<=1024 test_simple_7.xml.f3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "206. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|i1<=1024"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:583: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:583"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:583"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:583: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:583"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:583"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:583: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:583"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:583"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:583: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:583"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:583"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_206
#AT_START_207
at_fn_group_banner 207 'DMRTest.at:584' \
  "filter test_simple_7.xml s|i1<1024 test_simple_7.xml.f4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "207. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|i1<1024"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:584: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:584"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:584"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:584: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:584"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:584"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:584: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:584"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:584"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:584: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:584"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:584"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_207
#AT_START_208
at_fn_group_banner 208 'DMRTest.at:585' \
  "filter test_simple_7.xml s|i1<=1024 test_simple_7.xml.f5.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "208. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|i1<=1024"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f5.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:585: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:585"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:585"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:585: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:585"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:585"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:585: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:585"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:585"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:585: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:585"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:585"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_208
#AT_START_209
at_fn_group_banner 209 'DMRTest.at:586' \
  "filter test_simple_7.xml s|i1>1024 test_simple_7.xml.f6.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "209. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|i1>1024"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f6.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:586: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:586"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:586: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:586"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:586: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:586"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:586: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:586"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_209
#AT_START_210
at_fn_group_banner 210 'DMRTest.at:587' \
  "filter test_simple_7.xml s|i1>=1024 test_simple_7.xml.f7.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "210. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|i1>=1024"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f7.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:587: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:587"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:587"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:587: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:587"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:587"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:587: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:587"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:587"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:587: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:587"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:587"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_210
#AT_START_211
at_fn_group_banner 211 'DMRTest.at:589' \
  "filter test_simple_7.xml s|1024<i1 test_simple_7.xml.f8.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "211. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|1024<i1"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f8.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:589: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:589"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:589"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:589: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:589"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:589"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:589: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:589"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:589"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:589: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:589"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:589"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_211
#AT_START_212
at_fn_group_banner 212 'DMRTest.at:590' \
  "filter test_simple_7.xml s|1024<=i1<=32768 test_simple_7.xml.f9.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "212. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|1024<=i1<=32768"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.f9.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:590: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:590"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:590"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:590: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:590"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:590"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:590: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:590"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:590"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:590: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:590"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:590"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_212
#AT_START_213
at_fn_group_banner 213 'DMRTest.at:591' \
  "filter test_simple_7.xml s|i1>=1024.0 test_simple_7.xml.fa.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "213. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|i1>=1024.0"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.fa.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:591: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:591"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:591"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:591: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:591"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:591"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:591: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:591"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:591"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:591: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:591"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:591"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_213
#AT_START_214
at_fn_group_banner 214 'DMRTest.at:593' \
  "filter test_simple_7.xml s|s==\\\"Silly test string: 2\\\" test_simple_7.xml.fs1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "214. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|s==\"Silly test string: 2\""
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.fs1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:593: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:593"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:593"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:593: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:593"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:593"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:593: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:593"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:593"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:593: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:593"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:593"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_214
#AT_START_215
at_fn_group_banner 215 'DMRTest.at:594' \
  "filter test_simple_7.xml s|s!=\\\"Silly test string: 2\\\" test_simple_7.xml.fs2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "215. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|s!=\"Silly test string: 2\""
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.fs2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:594: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:594"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:594"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:594: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:594"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:594"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:594: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:594"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:594"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:594: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:594"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:594"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_215
#AT_START_216
at_fn_group_banner 216 'DMRTest.at:595' \
  "filter test_simple_7.xml s|s<\\\"Silly test string: 2\\\" test_simple_7.xml.fs3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "216. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|s<\"Silly test string: 2\""
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.fs3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:595: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:595"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:595"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:595: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:595"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:595"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:595: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:595"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:595"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:595: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:595"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:595"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_216
#AT_START_217
at_fn_group_banner 217 'DMRTest.at:596' \
  "filter test_simple_7.xml s|s<=\\\"Silly test string: 2\\\" test_simple_7.xml.fs4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "217. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|s<=\"Silly test string: 2\""
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.fs4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:596: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:596"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:596"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:596: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:596"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:596"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:596: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:596"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:596"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:596: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:596"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:596"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_217
#AT_START_218
at_fn_group_banner 218 'DMRTest.at:597' \
  "filter test_simple_7.xml s|s>\\\"Silly test string: 2\\\" test_simple_7.xml.fs5.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "218. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|s>\"Silly test string: 2\""
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.fs5.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:597: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:597"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:597"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:597: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:597"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:597"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:597: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:597"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:597"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:597: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:597"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:597"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_218
#AT_START_219
at_fn_group_banner 219 'DMRTest.at:598' \
  "filter test_simple_7.xml s|s>=\\\"Silly test string: 2\\\" test_simple_7.xml.fs6.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "219. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|s>=\"Silly test string: 2\""
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.fs6.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:598: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:598"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:598"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:598: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:598"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:598"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:598: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:598"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:598"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:598: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:598"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:598"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_219
#AT_START_220
at_fn_group_banner 220 'DMRTest.at:599' \
  "filter test_simple_7.xml s|s~=\\\".*2\\\" test_simple_7.xml.fs7.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "220. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s|s~=\".*2\""
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.fs7.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:599: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:599"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:599"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:599: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:599"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:599"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:599: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:599"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:599"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:599: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:599"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:599"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_220
#AT_START_221
at_fn_group_banner 221 'DMRTest.at:603' \
  "filter test_simple_7.xml s{i1}|i1<32768 test_simple_7.xml.g1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "221. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s{i1}|i1<32768"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.g1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:603: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:603"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:603"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:603: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:603"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:603"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:603: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:603"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:603"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:603: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:603"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:603"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_221
#AT_START_222
at_fn_group_banner 222 'DMRTest.at:604' \
  "filter test_simple_7.xml s{i1}|s<=\\\"Silly test string: 2\\\" test_simple_7.xml.g1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "222. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_7.xml
    ce="s{i1}|s<=\"Silly test string: 2\""
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_7.xml.g1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:604: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:604"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:604"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:604: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:604"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:604"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:604: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:604"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:604"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:604: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:604"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:604"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_222
#AT_START_223
at_fn_group_banner 223 'DMRTest.at:607' \
  "filter test_simple_8.1.xml outer test_simple_8.1.xml.f1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "223. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_8.1.xml
    ce="outer"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_8.1.xml.f1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:607: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:607"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:607"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:607: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:607"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:607"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:607: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:607"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:607"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:607: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:607"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:607"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_223
#AT_START_224
at_fn_group_banner 224 'DMRTest.at:608' \
  "filter test_simple_8.1.xml outer{x;y} test_simple_8.1.xml.f2.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "224. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_8.1.xml
    ce="outer{x;y}"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_8.1.xml.f2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:608: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:608"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:608: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:608"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:608: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:608"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:608: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:608"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:608"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_224
#AT_START_225
at_fn_group_banner 225 'DMRTest.at:609' \
  "filter test_simple_8.1.xml outer{x;y;inner} test_simple_8.1.xml.f3.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "225. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_8.1.xml
    ce="outer{x;y;inner}"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_8.1.xml.f3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:609: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:609"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:609"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:609: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:609"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:609"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:609: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:609"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:609"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:609: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:609"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:609"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_225
#AT_START_226
at_fn_group_banner 226 'DMRTest.at:610' \
  "filter test_simple_8.1.xml outer{x;y;inner|i1<1000} test_simple_8.1.xml.f4.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "226. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_8.1.xml
    ce="outer{x;y;inner|i1<1000}"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_8.1.xml.f4.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:610: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:610"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:610"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:610: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:610"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:610"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:610: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:610"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:610"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:610: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:610"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:610"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_226
#AT_START_227
at_fn_group_banner 227 'DMRTest.at:611' \
  "filter test_simple_8.1.xml outer{x;y;inner|i1<1000}|x<0.0 test_simple_8.1.xml.f5.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "227. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_8.1.xml
    ce="outer{x;y;inner|i1<1000}|x<0.0"
    baseline=$abs_srcdir/dmr-testsuite/universal/test_simple_8.1.xml.f5.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:611: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:611"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:611"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:611: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:611"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:611"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:611: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:611"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:611"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:611: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:611"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:611"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_227
#AT_START_228
at_fn_group_banner 228 'DMRTest.at:618' \
  "filter names_with_spaces.dmr /u names_with_spaces.dmr.1.trans_base" ""
at_xfail=no
      test "Xpass" = "Xxfail" && at_xfail=yes
(
  $as_echo "228. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/names_with_spaces.dmr
    ce="/u"
    baseline=$abs_srcdir/dmr-testsuite/universal/names_with_spaces.dmr.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:618: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:618"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:618"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:618: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:618"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:618"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:618: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:618"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:618"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:618: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:618"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:618"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_228
#AT_START_229
at_fn_group_banner 229 'DMRTest.at:619' \
  "filter names_with_spaces.dmr /inst2/u names_with_spaces.dmr.2.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "229. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/names_with_spaces.dmr
    ce="/inst2/u"
    baseline=$abs_srcdir/dmr-testsuite/universal/names_with_spaces.dmr.2.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:619: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:619"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:619"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:619: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:619"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:619"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:619: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:619"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:619"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:619: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:619"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:619"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_229
#AT_START_230
at_fn_group_banner 230 'DMRTest.at:620' \
  "filter names_with_spaces.dmr /inst2/Point.x names_with_spaces.dmr.3.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "230. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/names_with_spaces.dmr
    ce="/inst2/Point.x"
    baseline=$abs_srcdir/dmr-testsuite/universal/names_with_spaces.dmr.3.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:620: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:620"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:620"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:620: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:620"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:620"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:620: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:620"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:620"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:620: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:620"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:620"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_230
#AT_START_231
at_fn_group_banner 231 'DMRTest.at:622' \
  "filter names_with_spaces2.dmr /inst2/\\\"Point Break\\\".x names_with_spaces2.dmr.1.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "231. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/names_with_spaces2.dmr
    ce="/inst2/\"Point Break\".x"
    baseline=$abs_srcdir/dmr-testsuite/universal/names_with_spaces2.dmr.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:622: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:622"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:622"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:622: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:622"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:622"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:622: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:622"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:622"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:622: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:622"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:622"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_231
#AT_START_232
at_fn_group_banner 232 'DMRTest.at:623' \
  "filter names_with_spaces2.dmr /inst2/Point%20Break.x names_with_spaces2.dmr.1.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "232. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/names_with_spaces2.dmr
    ce="/inst2/Point%20Break.x"
    baseline=$abs_srcdir/dmr-testsuite/universal/names_with_spaces2.dmr.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:623: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:623"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:623"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:623: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:623"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:623"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:623: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:623"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:623"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:623: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:623"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:623"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_232
#AT_START_233
at_fn_group_banner 233 'DMRTest.at:624' \
  "filter names_with_spaces2.dmr /inst2/\\\"Point%20Break\\\".x names_with_spaces2.dmr.1.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "233. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/names_with_spaces2.dmr
    ce="/inst2/\"Point%20Break\".x"
    baseline=$abs_srcdir/dmr-testsuite/universal/names_with_spaces2.dmr.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:624: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:624"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:624"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:624: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:624"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:624"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:624: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:624"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:624"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:624: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:624"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:624"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_233
#AT_START_234
at_fn_group_banner 234 'DMRTest.at:626' \
  "filter names_with_spaces3.dmr /inst2/\\\"New Group\\\"/x names_with_spaces3.dmr.1.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "234. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/names_with_spaces3.dmr
    ce="/inst2/\"New Group\"/x"
    baseline=$abs_srcdir/dmr-testsuite/universal/names_with_spaces3.dmr.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:626: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:626"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:626"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:626: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:626"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:626"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:626: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:626"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:626"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:626: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:626"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:626"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_234
#AT_START_235
at_fn_group_banner 235 'DMRTest.at:627' \
  "filter names_with_spaces3.dmr /inst2/New%20Group/x names_with_spaces3.dmr.1.trans_base" ""
at_xfail=no
      test "Xxfail" = "Xxfail" && at_xfail=yes
(
  $as_echo "235. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/names_with_spaces3.dmr
    ce="/inst2/New%20Group/x"
    baseline=$abs_srcdir/dmr-testsuite/universal/names_with_spaces3.dmr.1.trans_base

    if test -n "$baselines" -a x$baselines = xyes; then :

        # // old version - sbl 9.4.19
        # AT_CHECK([$abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[[0-9a-f]][[0-9a-f]]*</Value>@@' ], [], [stdout], [])

        { set +x
$as_echo "$at_srcdir/DMRTest.at:627: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:627"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:627"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:627: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:627"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:627"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:627: \$abs_builddir/dmr-test -x -e -t \$input -c \"\$ce\" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@' "
at_fn_check_prepare_notrace 'a shell pipeline' "DMRTest.at:627"
( $at_check_trace; $abs_builddir/dmr-test -x -e -t $input -c "$ce" | sed 's@<Value>[0-9a-f][0-9a-f]*</Value>@@'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:627"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:627: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "DMRTest.at:627"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:627"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_235
#AT_START_236
at_fn_group_banner 236 'DMRTest.at:631' \
  "parse ce test_simple_1.xml nasty" "               "
at_xfail=no
      test "ztest_simple_1.xml.parse_ce_1" = "zxfail" && at_xfail=yes
(
  $as_echo "236. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_1.xml
    ce=nasty
    baseline=$abs_srcdir/dmr-testsuite/test_simple_1.xml.parse_ce_1

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:631: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:631"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:631"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:631: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:631"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:631"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:631: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:631"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:631"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:631: cat stdout stderr > tmp"
at_fn_check_prepare_trace "DMRTest.at:631"
( $at_check_trace; cat stdout stderr > tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:631"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:631: diff -b -B \$baseline tmp"
at_fn_check_prepare_dynamic "diff -b -B $baseline tmp" "DMRTest.at:631"
( $at_check_trace; diff -b -B $baseline tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:631"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_236
#AT_START_237
at_fn_group_banner 237 'DMRTest.at:635' \
  "parse ce test_simple_1.xml d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1" ""
at_xfail=no
      test "ztest_simple_1.xml.parse_ce_2" = "zxfail" && at_xfail=yes
(
  $as_echo "237. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_1.xml
    ce=d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1
    baseline=$abs_srcdir/dmr-testsuite/test_simple_1.xml.parse_ce_2

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:635: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:635"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:635"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:635: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:635"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:635"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:635: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:635"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:635"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:635: cat stdout stderr > tmp"
at_fn_check_prepare_trace "DMRTest.at:635"
( $at_check_trace; cat stdout stderr > tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:635"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:635: diff -b -B \$baseline tmp"
at_fn_check_prepare_dynamic "diff -b -B $baseline tmp" "DMRTest.at:635"
( $at_check_trace; diff -b -B $baseline tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:635"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_237
#AT_START_238
at_fn_group_banner 238 'DMRTest.at:637' \
  "parse ce test_simple_6.3.xml s.nasty" "           "
at_xfail=no
      test "ztest_simple_6.3.xml.parse_ce_1" = "zxfail" && at_xfail=yes
(
  $as_echo "238. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_6.3.xml
    ce=s.nasty
    baseline=$abs_srcdir/dmr-testsuite/test_simple_6.3.xml.parse_ce_1

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:637: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:637"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:637"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:637: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:637"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:637"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:637: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:637"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:637"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:637: cat stdout stderr > tmp"
at_fn_check_prepare_trace "DMRTest.at:637"
( $at_check_trace; cat stdout stderr > tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:637"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:637: diff -b -B \$baseline tmp"
at_fn_check_prepare_dynamic "diff -b -B $baseline tmp" "DMRTest.at:637"
( $at_check_trace; diff -b -B $baseline tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:637"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_238
#AT_START_239
at_fn_group_banner 239 'DMRTest.at:639' \
  "parse ce test_simple_6.3.xml s.d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1" ""
at_xfail=no
      test "ztest_simple_6.3.xml.parse_ce_2" = "zxfail" && at_xfail=yes
(
  $as_echo "239. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/test_simple_6.3.xml
    ce=s.d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1
    baseline=$abs_srcdir/dmr-testsuite/test_simple_6.3.xml.parse_ce_2

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:639: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:639"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:639"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:639: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:639"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:639"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:639: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:639"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:639"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:639: cat stdout stderr > tmp"
at_fn_check_prepare_trace "DMRTest.at:639"
( $at_check_trace; cat stdout stderr > tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:639"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:639: diff -b -B \$baseline tmp"
at_fn_check_prepare_dynamic "diff -b -B $baseline tmp" "DMRTest.at:639"
( $at_check_trace; diff -b -B $baseline tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:639"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_239
#AT_START_240
at_fn_group_banner 240 'DMRTest.at:641' \
  "parse ce vol_1_ce_12.xml temp[nasty]" "           "
at_xfail=no
      test "zvol_1_ce_12.xml.parse_ce_1" = "zxfail" && at_xfail=yes
(
  $as_echo "240. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_12.xml
    ce=temp[nasty]
    baseline=$abs_srcdir/dmr-testsuite/vol_1_ce_12.xml.parse_ce_1

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:641: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:641"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:641"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:641: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:641"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:641"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:641: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:641"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:641"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:641: cat stdout stderr > tmp"
at_fn_check_prepare_trace "DMRTest.at:641"
( $at_check_trace; cat stdout stderr > tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:641"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:641: diff -b -B \$baseline tmp"
at_fn_check_prepare_dynamic "diff -b -B $baseline tmp" "DMRTest.at:641"
( $at_check_trace; diff -b -B $baseline tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:641"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_240
#AT_START_241
at_fn_group_banner 241 'DMRTest.at:643' \
  "parse ce vol_1_ce_12.xml temp[d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1]" ""
at_xfail=no
      test "zvol_1_ce_12.xml.parse_ce_2" = "zxfail" && at_xfail=yes
(
  $as_echo "241. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/dmr-testsuite/vol_1_ce_12.xml
    ce=temp[d1rox%253cscript%253ealert%25281%2529%253c%252fscript%253ed55je=1]
    baseline=$abs_srcdir/dmr-testsuite/vol_1_ce_12.xml.parse_ce_2

    if test -n "$baselines" -a x$baselines = xyes; then :

        { set +x
$as_echo "$at_srcdir/DMRTest.at:643: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:643"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:643"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:643: cat stdout stderr > \$baseline.tmp"
at_fn_check_prepare_dynamic "cat stdout stderr > $baseline.tmp" "DMRTest.at:643"
( $at_check_trace; cat stdout stderr > $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:643"
$at_failed && at_fn_log_failure
$at_traceon; }


else

        { set +x
$as_echo "$at_srcdir/DMRTest.at:643: \$abs_builddir/dmr-test -x -p \$input -c \$ce"
at_fn_check_prepare_dynamic "$abs_builddir/dmr-test -x -p $input -c $ce" "DMRTest.at:643"
( $at_check_trace; $abs_builddir/dmr-test -x -p $input -c $ce
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; tee stderr <"$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/DMRTest.at:643"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:643: cat stdout stderr > tmp"
at_fn_check_prepare_trace "DMRTest.at:643"
( $at_check_trace; cat stdout stderr > tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:643"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
$as_echo "$at_srcdir/DMRTest.at:643: diff -b -B \$baseline tmp"
at_fn_check_prepare_dynamic "diff -b -B $baseline tmp" "DMRTest.at:643"
( $at_check_trace; diff -b -B $baseline tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/DMRTest.at:643"
$at_failed && at_fn_log_failure
$at_traceon; }



fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_241
